//
// File generated by rootcint at Mon Dec 30 12:26:58 2013

// Do NOT change. Changes will be lost _next_proc time file is generated
//

#define R__DICTIONARY_FILENAME ep_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ep_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataH10 DataH10;
      #else
      class DataH10  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::DataH10::tmp tmp;
         #else
         class tmp  {
            public:
            //friend XX;
            int id[40]; //[gpart]
            int stat[40]; //[gpart]
            int dc[40]; //[gpart]
            int cc[40]; //[gpart]
            int sc[40]; //[gpart]
            int ec[40]; //[gpart]
            int q[40]; //[gpart]
            int dc_sect[40]; //[dc_part]
            int dc_stat[40]; //[dc_part]
            int ec_stat[40]; //[ec_part]
            int ec_sect[40]; //[ec_part]
            int sc_sect[40]; //[sc_part]
            int sc_pd[40]; //[sc_part]
            int sc_stat[40]; //[sc_part]
            int cc_sect[40]; //[cc_part]
            int nphe[40]; //[cc_part]
         };
         #endif

         ::H10Typ h10typ; //
         ::TTree* h10chain; //
         int run; //
         char fn[256]; //
         char bn[64]; //
         ::TLorentzVector lvE0; //
         ::TLorentzVector lvP0; //
         unsigned int evntid; //
         char evthel; //
         unsigned char npart; //
         float q_l; //
         float t_l; //
         float tr_time; //
         int gpart; //
         short id[40]; //[gpart]
         char stat[40]; //[gpart]
         unsigned char dc[40]; //[gpart]
         unsigned char cc[40]; //[gpart]
         unsigned char sc[40]; //[gpart]
         unsigned char ec[40]; //[gpart]
         float p[40]; //[gpart]
         float m[40]; //[gpart]
         char q[40]; //[gpart]
         float b[40]; //[gpart]
         float cx[40]; //[gpart]
         float cy[40]; //[gpart]
         float cz[40]; //[gpart]
         float vx[40]; //[gpart]
         float vy[40]; //[gpart]
         float vz[40]; //[gpart]
         int dc_part; //
         unsigned char dc_sect[40]; //[dc_part]
         char dc_stat[40]; //[dc_part]
         float dc_xsc[40]; //[dc_part]
         float dc_ysc[40]; //[dc_part]
         float dc_zsc[40]; //[dc_part]
         float dc_cxsc[40]; //[dc_part]
         float dc_cysc[40]; //[dc_part]
         float dc_czsc[40]; //[dc_part]
         int ec_part; //
         unsigned short ec_stat[40]; //[ec_part]
         unsigned char ec_sect[40]; //[ec_part]
         float etot[40]; //[ec_part]
         float ec_ei[40]; //[ec_part]
         float ec_eo[40]; //[ec_part]
         float ech_x[40]; //[ec_part]
         float ech_y[40]; //[ec_part]
         float ech_z[40]; //[ec_part]
         int sc_part; //
         unsigned char sc_sect[40]; //[sc_part]
         unsigned char sc_pd[40]; //[sc_part]
         unsigned char sc_stat[40]; //[sc_part]
         float sc_t[40]; //[sc_part]
         float sc_r[40]; //[sc_part]
         int cc_part; //
         unsigned char cc_sect[40]; //[cc_part]
         int cc_segm[40]; //[cc_part]
         unsigned short nphe[40]; //[cc_part]
         int mcnentr; //
         unsigned char mcnpart; //
         int mcst[40]; //[mcnentr]
         int mcid[40]; //[mcnentr]
         int mcpid[40]; //[mcnentr]
         float mctheta[40]; //[mcnentr]
         float mcphi[40]; //[mcnentr]
         float mcp[40]; //[mcnentr]
         float mcm[40]; //[mcnentr]
         float mcvx[40]; //[mcnentr]
         float mcvy[40]; //[mcnentr]
         float mcvz[40]; //[mcnentr]
         float mctof[40]; //[mcnentr]
         int nprt; //
         int pidpart[40]; //[nprt]
         float xpart[40]; //[nprt]
         float ypart[40]; //[nprt]
         float zpart[40]; //[nprt]
         float epart[40]; //[nprt]
         float pxpart[40]; //[nprt]
         float pypart[40]; //[nprt]
         float pzpart[40]; //[nprt]
         float qpart[40]; //[nprt]
         int flagspart[40]; //[nprt]
         tmp tmpVars; //
         ::TBranch* b_evntid; //!
         ::TBranch* b_evthel; //
         ::TBranch* b_npart; //!
         ::TBranch* b_q_l; //!
         ::TBranch* b_t_l; //!
         ::TBranch* b_tr_time; //!
         ::TBranch* b_gpart; //!
         ::TBranch* b_id; //!
         ::TBranch* b_stat; //!
         ::TBranch* b_dc; //!
         ::TBranch* b_cc; //!
         ::TBranch* b_sc; //!
         ::TBranch* b_ec; //!
         ::TBranch* b_p; //!
         ::TBranch* b_m; //!
         ::TBranch* b_q; //!
         ::TBranch* b_b; //!
         ::TBranch* b_cx; //!
         ::TBranch* b_cy; //!
         ::TBranch* b_cz; //!
         ::TBranch* b_vx; //!
         ::TBranch* b_vy; //!
         ::TBranch* b_vz; //!
         ::TBranch* b_dc_part; //!
         ::TBranch* b_dc_sect; //!
         ::TBranch* b_dc_stat; //!
         ::TBranch* b_dc_xsc; //!
         ::TBranch* b_dc_ysc; //!
         ::TBranch* b_dc_zsc; //!
         ::TBranch* b_dc_cxsc; //!
         ::TBranch* b_dc_cysc; //!
         ::TBranch* b_dc_czsc; //!
         ::TBranch* b_ec_part; //!
         ::TBranch* b_ec_stat; //!
         ::TBranch* b_ec_sect; //!
         ::TBranch* b_etot; //!
         ::TBranch* b_ec_ei; //!
         ::TBranch* b_ec_eo; //!
         ::TBranch* b_ech_x; //!
         ::TBranch* b_ech_y; //!
         ::TBranch* b_ech_z; //!
         ::TBranch* b_sc_part; //!
         ::TBranch* b_sc_sect; //!
         ::TBranch* b_sc_pd; //!
         ::TBranch* b_sc_stat; //!
         ::TBranch* b_sc_t; //!
         ::TBranch* b_sc_r; //!
         ::TBranch* b_cc_part; //!
         ::TBranch* b_cc_sect; //!
         ::TBranch* b_cc_segm; //!
         ::TBranch* b_nphe; //!
         ::TBranch* b_mcnentr; //!
         ::TBranch* b_mcnpart; //!
         ::TBranch* b_mcst; //!
         ::TBranch* b_mcid; //!
         ::TBranch* b_mcpid; //!
         ::TBranch* b_mctheta; //!
         ::TBranch* b_mcphi; //!
         ::TBranch* b_mcp; //!
         ::TBranch* b_mcm; //!
         ::TBranch* b_mcvx; //!
         ::TBranch* b_mcvy; //!
         ::TBranch* b_mcvz; //!
         ::TBranch* b_mctof; //!
         ::TBranch* b_nprt; //!
         ::TBranch* b_pidpart; //!
         ::TBranch* b_xpart; //!
         ::TBranch* b_ypart; //!
         ::TBranch* b_zpart; //!
         ::TBranch* b_epart; //!
         ::TBranch* b_pxpart; //!
         ::TBranch* b_pypart; //!
         ::TBranch* b_pzpart; //!
         ::TBranch* b_qpart; //!
         ::TBranch* b_flagspart; //!
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DataH10_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataH10_Dictionary();
   static void delete_DataH10(void *p);
   static void deleteArray_DataH10(void *p);
   static void destruct_DataH10(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataH10*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataH10) == sizeof(::ROOT::Shadow::DataH10));
      ::DataH10 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataH10),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataH10", "./data_h10.h", 21,
                  typeid(::DataH10), DefineBehavior(ptr, ptr),
                  &DataH10_ShowMembers, &DataH10_Dictionary, isa_proxy, 4,
                  sizeof(::DataH10) );
      instance.SetDelete(&delete_DataH10);
      instance.SetDeleteArray(&deleteArray_DataH10);
      instance.SetDestructor(&destruct_DataH10);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataH10*)
   {
      return GenerateInitInstanceLocal((::DataH10*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataH10*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataH10_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataH10*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ParticleConstants {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ParticleConstants_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ParticleConstants", 0 /*version*/, "./particle_constants.h", 10,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ParticleConstants_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ParticleConstants_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

//______________________________________________________________________________
namespace ROOT {
   void DataH10_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataH10.
      typedef ::ROOT::Shadow::DataH10 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataH10*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10typ", (void*)&sobj->h10typ);
      R__insp.InspectMember("H10Typ", (void*)&sobj->h10typ, "h10typ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h10chain", &sobj->h10chain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn[256]", sobj->fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bn[64]", sobj->bn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lvE0", &sobj->lvE0);
      R__insp.InspectMember(sobj->lvE0, "lvE0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lvP0", &sobj->lvP0);
      R__insp.InspectMember(sobj->lvP0, "lvP0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evntid", &sobj->evntid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evthel", &sobj->evthel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &sobj->npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q_l", &sobj->q_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_l", &sobj->t_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tr_time", &sobj->tr_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpart", &sobj->gpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id[40]", sobj->id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat[40]", sobj->stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc[40]", sobj->dc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc[40]", sobj->cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc[40]", sobj->sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec[40]", sobj->ec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[40]", sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m[40]", sobj->m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q[40]", sobj->q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b[40]", sobj->b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cx[40]", sobj->cx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cy[40]", sobj->cy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cz[40]", sobj->cz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx[40]", sobj->vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy[40]", sobj->vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz[40]", sobj->vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_part", &sobj->dc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_sect[40]", sobj->dc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_stat[40]", sobj->dc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_xsc[40]", sobj->dc_xsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_ysc[40]", sobj->dc_ysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_zsc[40]", sobj->dc_zsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_cxsc[40]", sobj->dc_cxsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_cysc[40]", sobj->dc_cysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_czsc[40]", sobj->dc_czsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_part", &sobj->ec_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_stat[40]", sobj->ec_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_sect[40]", sobj->ec_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etot[40]", sobj->etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_ei[40]", sobj->ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_eo[40]", sobj->ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_x[40]", sobj->ech_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_y[40]", sobj->ech_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_z[40]", sobj->ech_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_part", &sobj->sc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_sect[40]", sobj->sc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_pd[40]", sobj->sc_pd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_stat[40]", sobj->sc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_t[40]", sobj->sc_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_r[40]", sobj->sc_r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_part", &sobj->cc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_sect[40]", sobj->cc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_segm[40]", sobj->cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphe[40]", sobj->nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcnentr", &sobj->mcnentr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcnpart", &sobj->mcnpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcst[40]", sobj->mcst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcid[40]", sobj->mcid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcpid[40]", sobj->mcpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mctheta[40]", sobj->mctheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcphi[40]", sobj->mcphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcp[40]", sobj->mcp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcm[40]", sobj->mcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvx[40]", sobj->mcvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvy[40]", sobj->mcvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvz[40]", sobj->mcvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mctof[40]", sobj->mctof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nprt", &sobj->nprt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidpart[40]", sobj->pidpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpart[40]", sobj->xpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypart[40]", sobj->ypart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpart[40]", sobj->zpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "epart[40]", sobj->epart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxpart[40]", sobj->pxpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pypart[40]", sobj->pypart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzpart[40]", sobj->pzpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qpart[40]", sobj->qpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flagspart[40]", sobj->flagspart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmpVars", (void*)&sobj->tmpVars);
      R__insp.InspectMember("DataH10::tmp", (void*)&sobj->tmpVars, "tmpVars.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_evntid", &sobj->b_evntid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_evthel", &sobj->b_evthel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_npart", &sobj->b_npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_q_l", &sobj->b_q_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_t_l", &sobj->b_t_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_tr_time", &sobj->b_tr_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_gpart", &sobj->b_gpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_id", &sobj->b_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_stat", &sobj->b_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc", &sobj->b_dc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc", &sobj->b_cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc", &sobj->b_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec", &sobj->b_ec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p", &sobj->b_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_m", &sobj->b_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_q", &sobj->b_q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_b", &sobj->b_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cx", &sobj->b_cx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cy", &sobj->b_cy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cz", &sobj->b_cz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vx", &sobj->b_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vy", &sobj->b_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vz", &sobj->b_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_part", &sobj->b_dc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_sect", &sobj->b_dc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_stat", &sobj->b_dc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_xsc", &sobj->b_dc_xsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_ysc", &sobj->b_dc_ysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_zsc", &sobj->b_dc_zsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_cxsc", &sobj->b_dc_cxsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_cysc", &sobj->b_dc_cysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_czsc", &sobj->b_dc_czsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_part", &sobj->b_ec_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_stat", &sobj->b_ec_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_sect", &sobj->b_ec_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_etot", &sobj->b_etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_ei", &sobj->b_ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_eo", &sobj->b_ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_x", &sobj->b_ech_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_y", &sobj->b_ech_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_z", &sobj->b_ech_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_part", &sobj->b_sc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_sect", &sobj->b_sc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_pd", &sobj->b_sc_pd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_stat", &sobj->b_sc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_t", &sobj->b_sc_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_r", &sobj->b_sc_r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_part", &sobj->b_cc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_sect", &sobj->b_cc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_segm", &sobj->b_cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nphe", &sobj->b_nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcnentr", &sobj->b_mcnentr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcnpart", &sobj->b_mcnpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcst", &sobj->b_mcst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcid", &sobj->b_mcid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcpid", &sobj->b_mcpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mctheta", &sobj->b_mctheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcphi", &sobj->b_mcphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcp", &sobj->b_mcp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcm", &sobj->b_mcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvx", &sobj->b_mcvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvy", &sobj->b_mcvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvz", &sobj->b_mcvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mctof", &sobj->b_mctof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nprt", &sobj->b_nprt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pidpart", &sobj->b_pidpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_xpart", &sobj->b_xpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ypart", &sobj->b_ypart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_zpart", &sobj->b_zpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_epart", &sobj->b_epart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pxpart", &sobj->b_pxpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pypart", &sobj->b_pypart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pzpart", &sobj->b_pzpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_qpart", &sobj->b_qpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_flagspart", &sobj->b_flagspart);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_DataH10(void *p) {
      delete ((::DataH10*)p);
   }
   static void deleteArray_DataH10(void *p) {
      delete [] ((::DataH10*)p);
   }
   static void destruct_DataH10(void *p) {
      typedef ::DataH10 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataH10

/********************************************************
* ep_dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableep_dict();

extern "C" void G__set_cpp_environmentep_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("data_h10.h");
  G__add_compiledheader("particle_constants.h");
  G__cpp_reset_tagtableep_dict();
}
#include <new>
extern "C" int G__cpp_dllrevep_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DataH10 */
static int G__ep_dict_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataH10* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataH10(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) DataH10(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Bind((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Reconcile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataH10* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataH10(*(DataH10*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataH10 G__TDataH10;
static int G__ep_dict_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataH10*) (soff+(sizeof(DataH10)*i)))->~G__TDataH10();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataH10*) (soff))->~G__TDataH10();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataH10* dest = (DataH10*) G__getstructoffset();
   *dest = *(DataH10*) libp->para[0].ref;
   const DataH10& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleConstants */
static int G__ep_dict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ParticleConstants::GetPdgMass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DataH10 */

/* ParticleConstants */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncep_dict {
 public:
  G__Sizep2memfuncep_dict(): p(&G__Sizep2memfuncep_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncep_dict::*p)();
};

size_t G__get_sizep2memfuncep_dict()
{
  G__Sizep2memfuncep_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceep_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableep_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("partMap",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DataH10 */
static void G__setup_memvarDataH10(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   { DataH10 *p; p=(DataH10*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->h10typ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_H10Typ),-1,-1,1,"h10typ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10chain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TTree),-1,-1,1,"h10chain=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fn)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fn[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bn)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"bn[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lvE0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-1,1,"lvE0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lvP0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-1,1,"lvP0=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("_MAX_PARTS=%lldLL",(long long)DataH10::_MAX_PARTS).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evntid)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"evntid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evthel)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"evthel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->npart)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->q_l)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"q_l=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t_l)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"t_l=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tr_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tr_time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gpart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"gpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"id[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->stat)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"stat[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->dc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"dc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"cc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->sc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->ec)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"ec[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"m[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->q)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"q[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->b)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cx[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cy[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cz[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vx[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vy[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vz[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->dc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"dc_sect[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_stat)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"dc_stat[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_xsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_xsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_ysc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_ysc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_zsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_zsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_cxsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_cxsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_cysc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_cysc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_czsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_czsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->ec_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ec_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ec_stat)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ec_stat[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"ec_sect[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"etot[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_ei[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_eo[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_x[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_y[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_z[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->sc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_sect[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_pd)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_pd[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_stat)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_stat[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_t)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_t[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_r)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_r[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->cc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"cc_sect[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_segm[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->nphe)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"nphe[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->mcnentr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcnentr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcnpart)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"mcnpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcst[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcid[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcpid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcpid[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mctheta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mctheta[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcphi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcphi[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcp)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcp[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcm[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvx[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvy[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvz[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mctof)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mctof[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->nprt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nprt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pidpart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pidpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->xpart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"xpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->ypart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ypart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->zpart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->epart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"epart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->pxpart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pxpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->pypart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pypart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->pzpart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pzpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->qpart)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"qpart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->flagspart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"flagspart[40]=",0,"[nprt]");
   G__memvar_setup((void*)((long)(&p->tmpVars)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataH10cLcLtmp),-1,-1,1,"tmpVars=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_evntid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_evntid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_evthel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_evthel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_npart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_npart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_q_l)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_q_l=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_t_l)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_t_l=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_tr_time)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_tr_time=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_gpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_gpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_id=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_p=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_m)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_m=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_q)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_q=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_b=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_xsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_xsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_ysc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_ysc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_zsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_zsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_cxsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_cxsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_cysc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_cysc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_czsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_czsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_etot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_etot=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_ei)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_ei=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_eo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_eo=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_x=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_pd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_pd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_t)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_t=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_r)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_r=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_segm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_segm=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nphe)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_nphe=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcnentr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcnentr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcnpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcnpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcst)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcst=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcpid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcpid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mctheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mctheta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcphi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcm=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mctof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mctof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nprt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_nprt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pidpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_pidpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_xpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_xpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ypart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ypart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_zpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_zpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_epart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_epart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pxpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_pxpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pypart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_pypart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pzpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_pzpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_qpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_qpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_flagspart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_flagspart=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ParticleConstants */
static void G__setup_memvarParticleConstants(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   {
   G__memvar_setup((void*)(&ParticleConstants::SOL),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"SOL=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PROTON=%lldLL",(long long)ParticleConstants::PROTON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("NEUTRON=%lldLL",(long long)ParticleConstants::NEUTRON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PIP=%lldLL",(long long)ParticleConstants::PIP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PIM=%lldLL",(long long)ParticleConstants::PIM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PI0=%lldLL",(long long)ParticleConstants::PI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("KP=%lldLL",(long long)ParticleConstants::KP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("KM=%lldLL",(long long)ParticleConstants::KM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PHOTON=%lldLL",(long long)ParticleConstants::PHOTON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("ELECTRON=%lldLL",(long long)ParticleConstants::ELECTRON).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_P),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_P=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_N),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_N=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_E),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_E=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PIP),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PIP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PIM),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PIM=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PI0),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PI0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_KP),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_KP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_KM),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_KM=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_G),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_G=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_OMEGA),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_OMEGA=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::PARTMAP),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("partMap"),-2,1,"PARTMAP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E1F_P),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"E1F_P=",0,"5.499; ");
   G__memvar_setup((void*)(&ParticleConstants::E1F_lvE0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E1F_lvE0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E1F_lvP0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E1F_lvP0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E16_P),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"E16_P=",0,"changed from 5.700 post parkkj conversation on mtg 02-25-13");
   G__memvar_setup((void*)(&ParticleConstants::E16_lvE0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E16_lvE0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E16_lvP0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E16_lvP0=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarep_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDataH10(void) {
   /* DataH10 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   G__memfunc_setup("DataH10",547,G__ep_dict_558_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - h10type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bind",381,G__ep_dict_558_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconcile",916,G__ep_dict_558_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_558_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataH10", 547, G__ep_dict_558_0_5, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 0, 1, 1, 1, 0, "u 'DataH10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataH10", 673, G__ep_dict_558_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_558_0_7, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 1, 1, 1, 1, 0, "u 'DataH10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleConstants(void) {
   /* ParticleConstants */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   G__memfunc_setup("GetPdgMass",975,G__ep_dict_560_0_1, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - pdgId", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t))(&ParticleConstants::GetPdgMass) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncep_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalep_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcep_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ep_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_H10Typ = { "H10Typ" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_DataH10 = { "DataH10" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataH10cLcLtmp = { "DataH10::tmp" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_ParticleConstants = { "ParticleConstants" , 110 , -1 };
G__linked_taginfo G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableep_dict() {
  G__ep_dictLN_TString.tagnum = -1 ;
  G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ep_dictLN_TTree.tagnum = -1 ;
  G__ep_dictLN_TBranch.tagnum = -1 ;
  G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ep_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ep_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TLorentzVector.tagnum = -1 ;
  G__ep_dictLN_H10Typ.tagnum = -1 ;
  G__ep_dictLN_DataH10.tagnum = -1 ;
  G__ep_dictLN_DataH10cLcLtmp.tagnum = -1 ;
  G__ep_dictLN_ParticleConstants.tagnum = -1 ;
  G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableep_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_H10Typ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataH10),sizeof(DataH10),-1,295936,(char*)NULL,G__setup_memvarDataH10,G__setup_memfuncDataH10);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_DataH10cLcLtmp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_ParticleConstants),0,-1,262144,(char*)NULL,G__setup_memvarParticleConstants,G__setup_memfuncParticleConstants);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
}
extern "C" void G__cpp_setupep_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupep_dict()");
  G__set_cpp_environmentep_dict();
  G__cpp_setup_tagtableep_dict();

  G__cpp_setup_inheritanceep_dict();

  G__cpp_setup_typetableep_dict();

  G__cpp_setup_memvarep_dict();

  G__cpp_setup_memfuncep_dict();
  G__cpp_setup_globalep_dict();
  G__cpp_setup_funcep_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncep_dict();
  return;
}
class G__cpp_setup_initep_dict {
  public:
    G__cpp_setup_initep_dict() { G__add_setup_func("ep_dict",(G__incsetup)(&G__cpp_setupep_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initep_dict() { G__remove_setup_func("ep_dict"); }
};
G__cpp_setup_initep_dict G__cpp_setup_initializerep_dict;

