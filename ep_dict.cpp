//
// File generated by rootcint at Sun Dec  1 13:57:48 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ep_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ep_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataH10 DataH10;
      #else
      class DataH10  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::DataH10::tmp tmp;
         #else
         class tmp  {
            public:
            //friend XX;
            int id[40]; //[gpart]
            int stat[40]; //[gpart]
            int dc[40]; //[gpart]
            int cc[40]; //[gpart]
            int sc[40]; //[gpart]
            int ec[40]; //[gpart]
            int q[40]; //[gpart]
            int dc_sect[40]; //[dc_part]
            int dc_stat[40]; //[dc_part]
            int ec_stat[40]; //[ec_part]
            int ec_sect[40]; //[ec_part]
            int sc_sect[40]; //[sc_part]
            int sc_pd[40]; //[sc_part]
            int sc_stat[40]; //[sc_part]
            int cc_sect[40]; //[cc_part]
            int nphe[40]; //[cc_part]
         };
         #endif

         ::TTree* fChain; //
         bool is_e1f; //
         bool is_e16; //
         bool is_exp; //
         bool is_sim; //
         ::TString exp; //
         ::TString dtype; //
         ::TString skim; //
         int run; //
         char fn[256]; //
         char bn[64]; //
         ::TLorentzVector _4vE0; //
         ::TLorentzVector _4vP0; //
         unsigned int evntid; //
         char evthel; //
         unsigned char npart; //
         float q_l; //
         float t_l; //
         float tr_time; //
         int gpart; //
         short id[40]; //[gpart]
         char stat[40]; //[gpart]
         unsigned char dc[40]; //[gpart]
         unsigned char cc[40]; //[gpart]
         unsigned char sc[40]; //[gpart]
         unsigned char ec[40]; //[gpart]
         float p[40]; //[gpart]
         float m[40]; //[gpart]
         char q[40]; //[gpart]
         float b[40]; //[gpart]
         float cx[40]; //[gpart]
         float cy[40]; //[gpart]
         float cz[40]; //[gpart]
         float vx[40]; //[gpart]
         float vy[40]; //[gpart]
         float vz[40]; //[gpart]
         int dc_part; //
         unsigned char dc_sect[40]; //[dc_part]
         char dc_stat[40]; //[dc_part]
         float dc_xsc[40]; //[dc_part]
         float dc_ysc[40]; //[dc_part]
         float dc_zsc[40]; //[dc_part]
         float dc_cxsc[40]; //[dc_part]
         float dc_cysc[40]; //[dc_part]
         float dc_czsc[40]; //[dc_part]
         int ec_part; //
         unsigned short ec_stat[40]; //[ec_part]
         unsigned char ec_sect[40]; //[ec_part]
         float etot[40]; //[ec_part]
         float ec_ei[40]; //[ec_part]
         float ec_eo[40]; //[ec_part]
         float ech_x[40]; //[ec_part]
         float ech_y[40]; //[ec_part]
         float ech_z[40]; //[ec_part]
         int sc_part; //
         unsigned char sc_sect[40]; //[sc_part]
         unsigned char sc_pd[40]; //[sc_part]
         unsigned char sc_stat[40]; //[sc_part]
         float sc_t[40]; //[sc_part]
         float sc_r[40]; //[sc_part]
         int cc_part; //
         unsigned char cc_sect[40]; //[cc_part]
         int cc_segm[40]; //[cc_part]
         unsigned short nphe[40]; //[cc_part]
         int vidmvrt; //
         int ntrmvrt; //
         float xmvrt; //
         float ymvrt; //
         float zmvrt; //
         float ch2mvrt; //
         float cxxmvrt; //
         float cxymvrt; //
         float cxzmvrt; //
         float cyymvrt; //
         float cyzmvrt; //
         int stamvrt; //
         int mcnentr; //
         unsigned char mcnpart; //
         int mcst[40]; //[mcnentr]
         int mcid[40]; //[mcnentr]
         int mcpid[40]; //[mcnentr]
         float mctheta[40]; //[mcnentr]
         float mcphi[40]; //[mcnentr]
         float mcp[40]; //[mcnentr]
         float mcm[40]; //[mcnentr]
         float mcvx[40]; //[mcnentr]
         float mcvy[40]; //[mcnentr]
         float mcvz[40]; //[mcnentr]
         float mctof[40]; //[mcnentr]
         tmp tmpVars; //
         ::TBranch* b_dc_vx; //!
         ::TBranch* b_dc_vy; //!
         ::TBranch* b_dc_vz; //!
         ::TBranch* b_vidmvrt; //!
         ::TBranch* b_ntrmvrt; //!
         ::TBranch* b_xmvrt; //!
         ::TBranch* b_ymvrt; //!
         ::TBranch* b_zmvrt; //!
         ::TBranch* b_ch2mvrt; //!
         ::TBranch* b_cxxmvrt; //!
         ::TBranch* b_cxymvrt; //!
         ::TBranch* b_cxzmvrt; //!
         ::TBranch* b_cyymvrt; //!
         ::TBranch* b_cyzmvrt; //!
         ::TBranch* b_stamvrt; //!
         ::TBranch* b_mcnentr; //!
         ::TBranch* b_mcnpart; //!
         ::TBranch* b_mcst; //!
         ::TBranch* b_mcid; //!
         ::TBranch* b_mcpid; //!
         ::TBranch* b_mctheta; //!
         ::TBranch* b_mcphi; //!
         ::TBranch* b_mcp; //!
         ::TBranch* b_mcm; //!
         ::TBranch* b_mcvx; //!
         ::TBranch* b_mcvy; //!
         ::TBranch* b_mcvz; //!
         ::TBranch* b_mctof; //!
         ::TBranch* b_evthel; //
         ::TBranch* b_evntid; //!
         ::TBranch* b_npart; //!
         ::TBranch* b_q_l; //!
         ::TBranch* b_t_l; //!
         ::TBranch* b_tr_time; //!
         ::TBranch* b_gpart; //!
         ::TBranch* b_id; //!
         ::TBranch* b_stat; //!
         ::TBranch* b_dc; //!
         ::TBranch* b_cc; //!
         ::TBranch* b_sc; //!
         ::TBranch* b_ec; //!
         ::TBranch* b_p; //!
         ::TBranch* b_m; //!
         ::TBranch* b_q; //!
         ::TBranch* b_b; //!
         ::TBranch* b_cx; //!
         ::TBranch* b_cy; //!
         ::TBranch* b_cz; //!
         ::TBranch* b_vx; //!
         ::TBranch* b_vy; //!
         ::TBranch* b_vz; //!
         ::TBranch* b_dc_part; //!
         ::TBranch* b_dc_sect; //!
         ::TBranch* b_dc_stat; //!
         ::TBranch* b_dc_xsc; //!
         ::TBranch* b_dc_ysc; //!
         ::TBranch* b_dc_zsc; //!
         ::TBranch* b_dc_cxsc; //!
         ::TBranch* b_dc_cysc; //!
         ::TBranch* b_dc_czsc; //!
         ::TBranch* b_ec_part; //!
         ::TBranch* b_ec_stat; //!
         ::TBranch* b_ec_sect; //!
         ::TBranch* b_etot; //!
         ::TBranch* b_ec_ei; //!
         ::TBranch* b_ec_eo; //!
         ::TBranch* b_ech_x; //!
         ::TBranch* b_ech_y; //!
         ::TBranch* b_ech_z; //!
         ::TBranch* b_sc_part; //!
         ::TBranch* b_sc_sect; //!
         ::TBranch* b_sc_pd; //!
         ::TBranch* b_sc_stat; //!
         ::TBranch* b_sc_t; //!
         ::TBranch* b_sc_r; //!
         ::TBranch* b_cc_part; //!
         ::TBranch* b_cc_sect; //!
         ::TBranch* b_cc_segm; //!
         ::TBranch* b_nphe; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataEid DataEid;
      #else
      class DataEid  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataEid() throw() {};
         int sector; //
         float beta; //
         float betaStrE; //
         float dtE; //
         float p; //
         float ec_ei; //
         float ec_eo; //
         float etot; //
         int nphe; //
         int cc_segm; //
         float cc_theta; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataEFid DataEFid;
      #else
      class DataEFid  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataEFid() throw() {};
         bool fidE; //
         int sector; //
         float phi; //
         float theta; //
         float dc_xsc; //
         float dc_ysc; //
         float ech_x; //
         float ech_y; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataSkimQ DataSkimQ;
      #else
      class DataSkimQ  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataSkimQ() throw() {};
         bool isEVT_2POS_EX; //
         bool isEVT_1POS1NEG_EX; //
         bool isEVT_2POS1NEG_EX; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataMom DataMom;
      #else
      class DataMom  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataMom() throw() {};
         int sector; //
         float p; //
         float dcx; //
         float dcy; //
         float dcz; //
         float dp; //momentum corrections for electron
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataPid DataPid;
      #else
      class DataPid  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataPid() throw() {};
         int h10IdxP; //
         int h10IdxPip; //
         int h10IdxPim; //
         int sectorP; //
         int sectorPip; //
         int sectorPim; //
         float betaP; //
         float betaPip; //
         float betaPim; //
         float pP; //
         float pPip; //
         float pPim; //
         float betaStrP; //
         float betaStrPip; //
         float betaStrPim; //
         float dtP; //
         float dtPip; //
         float dtPim; //
         float P_ec_ei; //
         float P_ec_eo; //
         float P_etot; //
         float Pip_ec_ei; //
         float Pip_ec_eo; //
         float Pip_etot; //
         float Pim_ec_ei; //
         float Pim_ec_eo; //
         float Pim_etot; //
         int P_nphe; //
         int P_cc_segm; //
         float P_cc_theta; //
         int Pip_nphe; //
         int Pip_cc_segm; //
         float Pip_cc_theta; //
         int Pim_nphe; //
         int Pim_cc_segm; //
         float Pim_cc_theta; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataEkin DataEkin;
      #else
      class DataEkin  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataEkin() throw() {};
         int sector; //
         float W; //
         float Q2; //
         float nu; //
         float xb; //
         float E1; //
         float theta1; //
         float phi1; //
         float theta; //
         float phi; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataTop DataTop;
      #else
      class DataTop  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::DataTop::vars vars;
         #else
         class vars  {
            public:
            //friend XX;
            float M1; //
            float M2; //
            float theta; //
            float phi; //
            float alpha; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~DataTop() throw() {};
         float mm2ppippim; //
         float mmppippim; //
         float mm2ppip; //
         float mmppip; //
         float mm2ppim; //
         float mmppim; //
         float mm2pippim; //
         float mmpippim; //
         float W; //
         float Q2; //morand
         char h; //
         vars varset1; //
         vars varset2; //
         vars varset3; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DataAna DataAna;
      #else
      class DataAna  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::DataAna::h8Dbng h8Dbng;
         #else
         class h8Dbng  {
            public:
            //friend XX;
            int bins; //
            double xmin; //
            double xmax; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~DataAna() throw() {};
         int opart; //
         int h10idxE; //
         int h10idxP; //
         int h10idxPip; //
         int h10idxPim; //
         int top; //
         ::DataEid eid; //
         ::DataEFid efid; //
         ::DataSkimQ skimq; //
         ::DataPid pid; //
         ::DataMom mom; //
         ::DataEkin eKin; //
         ::DataEkin eKin_mc; //
         ::DataTop dTop; //
         ::DataTop dTop_mc; //
         h8Dbng bngQ2; //
         h8Dbng bngW; //
         h8Dbng bngMppip; //
         h8Dbng bngMppim; //
         h8Dbng bngMpippim; //
         h8Dbng bngTheta; //
         h8Dbng bngPhi; //
         h8Dbng bngAlpha; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DataH10_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataH10_Dictionary();
   static void delete_DataH10(void *p);
   static void deleteArray_DataH10(void *p);
   static void destruct_DataH10(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataH10*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataH10) == sizeof(::ROOT::Shadow::DataH10));
      ::DataH10 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataH10),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataH10", "./data_h10.h", 9,
                  typeid(::DataH10), DefineBehavior(ptr, ptr),
                  &DataH10_ShowMembers, &DataH10_Dictionary, isa_proxy, 4,
                  sizeof(::DataH10) );
      instance.SetDelete(&delete_DataH10);
      instance.SetDeleteArray(&deleteArray_DataH10);
      instance.SetDestructor(&destruct_DataH10);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataH10*)
   {
      return GenerateInitInstanceLocal((::DataH10*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataH10*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataH10_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataH10*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataEid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataEid_Dictionary();
   static void *new_DataEid(void *p = 0);
   static void *newArray_DataEid(Long_t size, void *p);
   static void delete_DataEid(void *p);
   static void deleteArray_DataEid(void *p);
   static void destruct_DataEid(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataEid*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataEid) == sizeof(::ROOT::Shadow::DataEid));
      ::DataEid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataEid),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataEid", "./data_eid.h", 7,
                  typeid(::DataEid), DefineBehavior(ptr, ptr),
                  &DataEid_ShowMembers, &DataEid_Dictionary, isa_proxy, 4,
                  sizeof(::DataEid) );
      instance.SetNew(&new_DataEid);
      instance.SetNewArray(&newArray_DataEid);
      instance.SetDelete(&delete_DataEid);
      instance.SetDeleteArray(&deleteArray_DataEid);
      instance.SetDestructor(&destruct_DataEid);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataEid*)
   {
      return GenerateInitInstanceLocal((::DataEid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataEid*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataEid_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataEid*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataEFid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataEFid_Dictionary();
   static void *new_DataEFid(void *p = 0);
   static void *newArray_DataEFid(Long_t size, void *p);
   static void delete_DataEFid(void *p);
   static void deleteArray_DataEFid(void *p);
   static void destruct_DataEFid(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataEFid*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataEFid) == sizeof(::ROOT::Shadow::DataEFid));
      ::DataEFid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataEFid),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataEFid", "./data_efid.h", 7,
                  typeid(::DataEFid), DefineBehavior(ptr, ptr),
                  &DataEFid_ShowMembers, &DataEFid_Dictionary, isa_proxy, 4,
                  sizeof(::DataEFid) );
      instance.SetNew(&new_DataEFid);
      instance.SetNewArray(&newArray_DataEFid);
      instance.SetDelete(&delete_DataEFid);
      instance.SetDeleteArray(&deleteArray_DataEFid);
      instance.SetDestructor(&destruct_DataEFid);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataEFid*)
   {
      return GenerateInitInstanceLocal((::DataEFid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataEFid*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataEFid_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataEFid*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataSkimQ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataSkimQ_Dictionary();
   static void *new_DataSkimQ(void *p = 0);
   static void *newArray_DataSkimQ(Long_t size, void *p);
   static void delete_DataSkimQ(void *p);
   static void deleteArray_DataSkimQ(void *p);
   static void destruct_DataSkimQ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataSkimQ*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataSkimQ) == sizeof(::ROOT::Shadow::DataSkimQ));
      ::DataSkimQ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataSkimQ),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataSkimQ", "./data_skim_q.h", 7,
                  typeid(::DataSkimQ), DefineBehavior(ptr, ptr),
                  &DataSkimQ_ShowMembers, &DataSkimQ_Dictionary, isa_proxy, 4,
                  sizeof(::DataSkimQ) );
      instance.SetNew(&new_DataSkimQ);
      instance.SetNewArray(&newArray_DataSkimQ);
      instance.SetDelete(&delete_DataSkimQ);
      instance.SetDeleteArray(&deleteArray_DataSkimQ);
      instance.SetDestructor(&destruct_DataSkimQ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataSkimQ*)
   {
      return GenerateInitInstanceLocal((::DataSkimQ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataSkimQ*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataSkimQ_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataSkimQ*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataMom_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataMom_Dictionary();
   static void *new_DataMom(void *p = 0);
   static void *newArray_DataMom(Long_t size, void *p);
   static void delete_DataMom(void *p);
   static void deleteArray_DataMom(void *p);
   static void destruct_DataMom(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataMom*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataMom) == sizeof(::ROOT::Shadow::DataMom));
      ::DataMom *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataMom),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataMom", "./data_mom.h", 7,
                  typeid(::DataMom), DefineBehavior(ptr, ptr),
                  &DataMom_ShowMembers, &DataMom_Dictionary, isa_proxy, 4,
                  sizeof(::DataMom) );
      instance.SetNew(&new_DataMom);
      instance.SetNewArray(&newArray_DataMom);
      instance.SetDelete(&delete_DataMom);
      instance.SetDeleteArray(&deleteArray_DataMom);
      instance.SetDestructor(&destruct_DataMom);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataMom*)
   {
      return GenerateInitInstanceLocal((::DataMom*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataMom*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataMom_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataMom*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataPid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataPid_Dictionary();
   static void *new_DataPid(void *p = 0);
   static void *newArray_DataPid(Long_t size, void *p);
   static void delete_DataPid(void *p);
   static void deleteArray_DataPid(void *p);
   static void destruct_DataPid(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataPid*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataPid) == sizeof(::ROOT::Shadow::DataPid));
      ::DataPid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataPid),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataPid", "./data_pid.h", 7,
                  typeid(::DataPid), DefineBehavior(ptr, ptr),
                  &DataPid_ShowMembers, &DataPid_Dictionary, isa_proxy, 4,
                  sizeof(::DataPid) );
      instance.SetNew(&new_DataPid);
      instance.SetNewArray(&newArray_DataPid);
      instance.SetDelete(&delete_DataPid);
      instance.SetDeleteArray(&deleteArray_DataPid);
      instance.SetDestructor(&destruct_DataPid);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataPid*)
   {
      return GenerateInitInstanceLocal((::DataPid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataPid*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataPid_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataPid*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataEkin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataEkin_Dictionary();
   static void *new_DataEkin(void *p = 0);
   static void *newArray_DataEkin(Long_t size, void *p);
   static void delete_DataEkin(void *p);
   static void deleteArray_DataEkin(void *p);
   static void destruct_DataEkin(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataEkin*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataEkin) == sizeof(::ROOT::Shadow::DataEkin));
      ::DataEkin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataEkin),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataEkin", "./data_ekin.h", 7,
                  typeid(::DataEkin), DefineBehavior(ptr, ptr),
                  &DataEkin_ShowMembers, &DataEkin_Dictionary, isa_proxy, 4,
                  sizeof(::DataEkin) );
      instance.SetNew(&new_DataEkin);
      instance.SetNewArray(&newArray_DataEkin);
      instance.SetDelete(&delete_DataEkin);
      instance.SetDeleteArray(&deleteArray_DataEkin);
      instance.SetDestructor(&destruct_DataEkin);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataEkin*)
   {
      return GenerateInitInstanceLocal((::DataEkin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataEkin*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataEkin_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataEkin*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataTop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataTop_Dictionary();
   static void *new_DataTop(void *p = 0);
   static void *newArray_DataTop(Long_t size, void *p);
   static void delete_DataTop(void *p);
   static void deleteArray_DataTop(void *p);
   static void destruct_DataTop(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataTop*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataTop) == sizeof(::ROOT::Shadow::DataTop));
      ::DataTop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataTop),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataTop", "./data_top.h", 7,
                  typeid(::DataTop), DefineBehavior(ptr, ptr),
                  &DataTop_ShowMembers, &DataTop_Dictionary, isa_proxy, 4,
                  sizeof(::DataTop) );
      instance.SetNew(&new_DataTop);
      instance.SetNewArray(&newArray_DataTop);
      instance.SetDelete(&delete_DataTop);
      instance.SetDeleteArray(&deleteArray_DataTop);
      instance.SetDestructor(&destruct_DataTop);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataTop*)
   {
      return GenerateInitInstanceLocal((::DataTop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataTop*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataTop_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataTop*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void DataAna_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataAna_Dictionary();
   static void *new_DataAna(void *p = 0);
   static void *newArray_DataAna(Long_t size, void *p);
   static void delete_DataAna(void *p);
   static void deleteArray_DataAna(void *p);
   static void destruct_DataAna(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataAna*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DataAna) == sizeof(::ROOT::Shadow::DataAna));
      ::DataAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataAna),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataAna", "./data_ana.h", 16,
                  typeid(::DataAna), DefineBehavior(ptr, ptr),
                  &DataAna_ShowMembers, &DataAna_Dictionary, isa_proxy, 4,
                  sizeof(::DataAna) );
      instance.SetNew(&new_DataAna);
      instance.SetNewArray(&newArray_DataAna);
      instance.SetDelete(&delete_DataAna);
      instance.SetDeleteArray(&deleteArray_DataAna);
      instance.SetDestructor(&destruct_DataAna);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataAna*)
   {
      return GenerateInitInstanceLocal((::DataAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataAna_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::DataAna*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ParticleConstants {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ParticleConstants_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ParticleConstants", 0 /*version*/, "./particle_constants.h", 10,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ParticleConstants_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ParticleConstants_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void SelH10_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SelH10(void *p = 0);
   static void *newArray_SelH10(Long_t size, void *p);
   static void delete_SelH10(void *p);
   static void deleteArray_SelH10(void *p);
   static void destruct_SelH10(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SelH10*)
   {
      ::SelH10 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SelH10 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SelH10", ::SelH10::Class_Version(), "./sel_h10.h", 23,
                  typeid(::SelH10), DefineBehavior(ptr, ptr),
                  &::SelH10::Dictionary, isa_proxy, 4,
                  sizeof(::SelH10) );
      instance.SetNew(&new_SelH10);
      instance.SetNewArray(&newArray_SelH10);
      instance.SetDelete(&delete_SelH10);
      instance.SetDeleteArray(&deleteArray_SelH10);
      instance.SetDestructor(&destruct_SelH10);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SelH10*)
   {
      return GenerateInitInstanceLocal((::SelH10*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SelH10*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *SelH10::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SelH10::Class_Name()
{
   return "SelH10";
}

//______________________________________________________________________________
const char *SelH10::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SelH10*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SelH10::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SelH10*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SelH10::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SelH10*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SelH10::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SelH10*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void DataH10_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataH10.
      typedef ::ROOT::Shadow::DataH10 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataH10*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &sobj->fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_e1f", &sobj->is_e1f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_e16", &sobj->is_e16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_exp", &sobj->is_exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_sim", &sobj->is_sim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exp", &sobj->exp);
      R__insp.InspectMember(sobj->exp, "exp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtype", &sobj->dtype);
      R__insp.InspectMember(sobj->dtype, "dtype.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "skim", &sobj->skim);
      R__insp.InspectMember(sobj->skim, "skim.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn[256]", sobj->fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bn[64]", sobj->bn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_4vE0", &sobj->_4vE0);
      R__insp.InspectMember(sobj->_4vE0, "_4vE0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_4vP0", &sobj->_4vP0);
      R__insp.InspectMember(sobj->_4vP0, "_4vP0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evntid", &sobj->evntid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evthel", &sobj->evthel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &sobj->npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q_l", &sobj->q_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_l", &sobj->t_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tr_time", &sobj->tr_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpart", &sobj->gpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id[40]", sobj->id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat[40]", sobj->stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc[40]", sobj->dc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc[40]", sobj->cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc[40]", sobj->sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec[40]", sobj->ec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[40]", sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m[40]", sobj->m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q[40]", sobj->q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b[40]", sobj->b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cx[40]", sobj->cx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cy[40]", sobj->cy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cz[40]", sobj->cz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx[40]", sobj->vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy[40]", sobj->vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz[40]", sobj->vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_part", &sobj->dc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_sect[40]", sobj->dc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_stat[40]", sobj->dc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_xsc[40]", sobj->dc_xsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_ysc[40]", sobj->dc_ysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_zsc[40]", sobj->dc_zsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_cxsc[40]", sobj->dc_cxsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_cysc[40]", sobj->dc_cysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_czsc[40]", sobj->dc_czsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_part", &sobj->ec_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_stat[40]", sobj->ec_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_sect[40]", sobj->ec_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etot[40]", sobj->etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_ei[40]", sobj->ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_eo[40]", sobj->ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_x[40]", sobj->ech_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_y[40]", sobj->ech_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_z[40]", sobj->ech_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_part", &sobj->sc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_sect[40]", sobj->sc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_pd[40]", sobj->sc_pd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_stat[40]", sobj->sc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_t[40]", sobj->sc_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_r[40]", sobj->sc_r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_part", &sobj->cc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_sect[40]", sobj->cc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_segm[40]", sobj->cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphe[40]", sobj->nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vidmvrt", &sobj->vidmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrmvrt", &sobj->ntrmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmvrt", &sobj->xmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymvrt", &sobj->ymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zmvrt", &sobj->zmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch2mvrt", &sobj->ch2mvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cxxmvrt", &sobj->cxxmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cxymvrt", &sobj->cxymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cxzmvrt", &sobj->cxzmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cyymvrt", &sobj->cyymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cyzmvrt", &sobj->cyzmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stamvrt", &sobj->stamvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcnentr", &sobj->mcnentr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcnpart", &sobj->mcnpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcst[40]", sobj->mcst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcid[40]", sobj->mcid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcpid[40]", sobj->mcpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mctheta[40]", sobj->mctheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcphi[40]", sobj->mcphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcp[40]", sobj->mcp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcm[40]", sobj->mcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvx[40]", sobj->mcvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvy[40]", sobj->mcvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcvz[40]", sobj->mcvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mctof[40]", sobj->mctof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmpVars", (void*)&sobj->tmpVars);
      R__insp.InspectMember("DataH10::tmp", (void*)&sobj->tmpVars, "tmpVars.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_vx", &sobj->b_dc_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_vy", &sobj->b_dc_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_vz", &sobj->b_dc_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vidmvrt", &sobj->b_vidmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ntrmvrt", &sobj->b_ntrmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_xmvrt", &sobj->b_xmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ymvrt", &sobj->b_ymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_zmvrt", &sobj->b_zmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ch2mvrt", &sobj->b_ch2mvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cxxmvrt", &sobj->b_cxxmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cxymvrt", &sobj->b_cxymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cxzmvrt", &sobj->b_cxzmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cyymvrt", &sobj->b_cyymvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cyzmvrt", &sobj->b_cyzmvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_stamvrt", &sobj->b_stamvrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcnentr", &sobj->b_mcnentr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcnpart", &sobj->b_mcnpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcst", &sobj->b_mcst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcid", &sobj->b_mcid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcpid", &sobj->b_mcpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mctheta", &sobj->b_mctheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcphi", &sobj->b_mcphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcp", &sobj->b_mcp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcm", &sobj->b_mcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvx", &sobj->b_mcvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvy", &sobj->b_mcvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcvz", &sobj->b_mcvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mctof", &sobj->b_mctof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_evthel", &sobj->b_evthel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_evntid", &sobj->b_evntid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_npart", &sobj->b_npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_q_l", &sobj->b_q_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_t_l", &sobj->b_t_l);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_tr_time", &sobj->b_tr_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_gpart", &sobj->b_gpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_id", &sobj->b_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_stat", &sobj->b_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc", &sobj->b_dc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc", &sobj->b_cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc", &sobj->b_sc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec", &sobj->b_ec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p", &sobj->b_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_m", &sobj->b_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_q", &sobj->b_q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_b", &sobj->b_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cx", &sobj->b_cx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cy", &sobj->b_cy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cz", &sobj->b_cz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vx", &sobj->b_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vy", &sobj->b_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vz", &sobj->b_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_part", &sobj->b_dc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_sect", &sobj->b_dc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_stat", &sobj->b_dc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_xsc", &sobj->b_dc_xsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_ysc", &sobj->b_dc_ysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_zsc", &sobj->b_dc_zsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_cxsc", &sobj->b_dc_cxsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_cysc", &sobj->b_dc_cysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dc_czsc", &sobj->b_dc_czsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_part", &sobj->b_ec_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_stat", &sobj->b_ec_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_sect", &sobj->b_ec_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_etot", &sobj->b_etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_ei", &sobj->b_ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ec_eo", &sobj->b_ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_x", &sobj->b_ech_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_y", &sobj->b_ech_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ech_z", &sobj->b_ech_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_part", &sobj->b_sc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_sect", &sobj->b_sc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_pd", &sobj->b_sc_pd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_stat", &sobj->b_sc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_t", &sobj->b_sc_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sc_r", &sobj->b_sc_r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_part", &sobj->b_cc_part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_sect", &sobj->b_cc_sect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cc_segm", &sobj->b_cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nphe", &sobj->b_nphe);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_DataH10(void *p) {
      delete ((::DataH10*)p);
   }
   static void deleteArray_DataH10(void *p) {
      delete [] ((::DataH10*)p);
   }
   static void destruct_DataH10(void *p) {
      typedef ::DataH10 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataH10

//______________________________________________________________________________
namespace ROOT {
   void DataAna_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataAna.
      typedef ::ROOT::Shadow::DataAna ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataAna*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opart", &sobj->opart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10idxE", &sobj->h10idxE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10idxP", &sobj->h10idxP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10idxPip", &sobj->h10idxPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10idxPim", &sobj->h10idxPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "top", &sobj->top);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eid", (void*)&sobj->eid);
      R__insp.InspectMember("DataEid", (void*)&sobj->eid, "eid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "efid", (void*)&sobj->efid);
      R__insp.InspectMember("DataEFid", (void*)&sobj->efid, "efid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "skimq", (void*)&sobj->skimq);
      R__insp.InspectMember("DataSkimQ", (void*)&sobj->skimq, "skimq.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid", (void*)&sobj->pid);
      R__insp.InspectMember("DataPid", (void*)&sobj->pid, "pid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", (void*)&sobj->mom);
      R__insp.InspectMember("DataMom", (void*)&sobj->mom, "mom.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eKin", (void*)&sobj->eKin);
      R__insp.InspectMember("DataEkin", (void*)&sobj->eKin, "eKin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eKin_mc", (void*)&sobj->eKin_mc);
      R__insp.InspectMember("DataEkin", (void*)&sobj->eKin_mc, "eKin_mc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dTop", (void*)&sobj->dTop);
      R__insp.InspectMember("DataTop", (void*)&sobj->dTop, "dTop.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dTop_mc", (void*)&sobj->dTop_mc);
      R__insp.InspectMember("DataTop", (void*)&sobj->dTop_mc, "dTop_mc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngQ2", (void*)&sobj->bngQ2);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngQ2, "bngQ2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngW", (void*)&sobj->bngW);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngW, "bngW.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngMppip", (void*)&sobj->bngMppip);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngMppip, "bngMppip.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngMppim", (void*)&sobj->bngMppim);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngMppim, "bngMppim.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngMpippim", (void*)&sobj->bngMpippim);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngMpippim, "bngMpippim.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngTheta", (void*)&sobj->bngTheta);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngTheta, "bngTheta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngPhi", (void*)&sobj->bngPhi);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngPhi, "bngPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bngAlpha", (void*)&sobj->bngAlpha);
      R__insp.InspectMember("DataAna::h8Dbng", (void*)&sobj->bngAlpha, "bngAlpha.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataAna(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataAna : new ::DataAna;
   }
   static void *newArray_DataAna(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataAna[nElements] : new ::DataAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataAna(void *p) {
      delete ((::DataAna*)p);
   }
   static void deleteArray_DataAna(void *p) {
      delete [] ((::DataAna*)p);
   }
   static void destruct_DataAna(void *p) {
      typedef ::DataAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataAna

//______________________________________________________________________________
namespace ROOT {
   void DataEid_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataEid.
      typedef ::ROOT::Shadow::DataEid ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataEid*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sobj->sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &sobj->beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaStrE", &sobj->betaStrE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtE", &sobj->dtE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_ei", &sobj->ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_eo", &sobj->ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etot", &sobj->etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphe", &sobj->nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_segm", &sobj->cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_theta", &sobj->cc_theta);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataEid(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEid : new ::DataEid;
   }
   static void *newArray_DataEid(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEid[nElements] : new ::DataEid[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataEid(void *p) {
      delete ((::DataEid*)p);
   }
   static void deleteArray_DataEid(void *p) {
      delete [] ((::DataEid*)p);
   }
   static void destruct_DataEid(void *p) {
      typedef ::DataEid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataEid

//______________________________________________________________________________
namespace ROOT {
   void DataEFid_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataEFid.
      typedef ::ROOT::Shadow::DataEFid ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataEFid*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidE", &sobj->fidE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sobj->sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &sobj->phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &sobj->theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_xsc", &sobj->dc_xsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_ysc", &sobj->dc_ysc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_x", &sobj->ech_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ech_y", &sobj->ech_y);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataEFid(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEFid : new ::DataEFid;
   }
   static void *newArray_DataEFid(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEFid[nElements] : new ::DataEFid[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataEFid(void *p) {
      delete ((::DataEFid*)p);
   }
   static void deleteArray_DataEFid(void *p) {
      delete [] ((::DataEFid*)p);
   }
   static void destruct_DataEFid(void *p) {
      typedef ::DataEFid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataEFid

//______________________________________________________________________________
namespace ROOT {
   void DataSkimQ_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataSkimQ.
      typedef ::ROOT::Shadow::DataSkimQ ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataSkimQ*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEVT_2POS_EX", &sobj->isEVT_2POS_EX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEVT_1POS1NEG_EX", &sobj->isEVT_1POS1NEG_EX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEVT_2POS1NEG_EX", &sobj->isEVT_2POS1NEG_EX);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataSkimQ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSkimQ : new ::DataSkimQ;
   }
   static void *newArray_DataSkimQ(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSkimQ[nElements] : new ::DataSkimQ[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataSkimQ(void *p) {
      delete ((::DataSkimQ*)p);
   }
   static void deleteArray_DataSkimQ(void *p) {
      delete [] ((::DataSkimQ*)p);
   }
   static void destruct_DataSkimQ(void *p) {
      typedef ::DataSkimQ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataSkimQ

//______________________________________________________________________________
namespace ROOT {
   void DataMom_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataMom.
      typedef ::ROOT::Shadow::DataMom ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataMom*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sobj->sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dcx", &sobj->dcx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dcy", &sobj->dcy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dcz", &sobj->dcz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dp", &sobj->dp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataMom(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataMom : new ::DataMom;
   }
   static void *newArray_DataMom(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataMom[nElements] : new ::DataMom[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataMom(void *p) {
      delete ((::DataMom*)p);
   }
   static void deleteArray_DataMom(void *p) {
      delete [] ((::DataMom*)p);
   }
   static void destruct_DataMom(void *p) {
      typedef ::DataMom current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataMom

//______________________________________________________________________________
namespace ROOT {
   void DataPid_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataPid.
      typedef ::ROOT::Shadow::DataPid ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataPid*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10IdxP", &sobj->h10IdxP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10IdxPip", &sobj->h10IdxPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10IdxPim", &sobj->h10IdxPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sectorP", &sobj->sectorP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sectorPip", &sobj->sectorPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sectorPim", &sobj->sectorPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaP", &sobj->betaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaPip", &sobj->betaPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaPim", &sobj->betaPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pP", &sobj->pP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pPip", &sobj->pPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pPim", &sobj->pPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaStrP", &sobj->betaStrP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaStrPip", &sobj->betaStrPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaStrPim", &sobj->betaStrPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtP", &sobj->dtP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtPip", &sobj->dtPip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtPim", &sobj->dtPim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_ec_ei", &sobj->P_ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_ec_eo", &sobj->P_ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_etot", &sobj->P_etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_ec_ei", &sobj->Pip_ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_ec_eo", &sobj->Pip_ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_etot", &sobj->Pip_etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_ec_ei", &sobj->Pim_ec_ei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_ec_eo", &sobj->Pim_ec_eo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_etot", &sobj->Pim_etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_nphe", &sobj->P_nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_cc_segm", &sobj->P_cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P_cc_theta", &sobj->P_cc_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_nphe", &sobj->Pip_nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_cc_segm", &sobj->Pip_cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pip_cc_theta", &sobj->Pip_cc_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_nphe", &sobj->Pim_nphe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_cc_segm", &sobj->Pim_cc_segm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pim_cc_theta", &sobj->Pim_cc_theta);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataPid(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataPid : new ::DataPid;
   }
   static void *newArray_DataPid(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataPid[nElements] : new ::DataPid[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataPid(void *p) {
      delete ((::DataPid*)p);
   }
   static void deleteArray_DataPid(void *p) {
      delete [] ((::DataPid*)p);
   }
   static void destruct_DataPid(void *p) {
      typedef ::DataPid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataPid

//______________________________________________________________________________
namespace ROOT {
   void DataTop_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataTop.
      typedef ::ROOT::Shadow::DataTop ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataTop*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2ppippim", &sobj->mm2ppippim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmppippim", &sobj->mmppippim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2ppip", &sobj->mm2ppip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmppip", &sobj->mmppip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2ppim", &sobj->mm2ppim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmppim", &sobj->mmppim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2pippim", &sobj->mm2pippim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpippim", &sobj->mmpippim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "W", &sobj->W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2", &sobj->Q2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h", &sobj->h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "varset1", (void*)&sobj->varset1);
      R__insp.InspectMember("DataTop::vars", (void*)&sobj->varset1, "varset1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "varset2", (void*)&sobj->varset2);
      R__insp.InspectMember("DataTop::vars", (void*)&sobj->varset2, "varset2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "varset3", (void*)&sobj->varset3);
      R__insp.InspectMember("DataTop::vars", (void*)&sobj->varset3, "varset3.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataTop(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataTop : new ::DataTop;
   }
   static void *newArray_DataTop(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataTop[nElements] : new ::DataTop[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataTop(void *p) {
      delete ((::DataTop*)p);
   }
   static void deleteArray_DataTop(void *p) {
      delete [] ((::DataTop*)p);
   }
   static void destruct_DataTop(void *p) {
      typedef ::DataTop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataTop

//______________________________________________________________________________
namespace ROOT {
   void DataEkin_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DataEkin.
      typedef ::ROOT::Shadow::DataEkin ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::DataEkin*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sobj->sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "W", &sobj->W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2", &sobj->Q2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu", &sobj->nu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xb", &sobj->xb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E1", &sobj->E1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta1", &sobj->theta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi1", &sobj->phi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &sobj->theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &sobj->phi);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataEkin(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEkin : new ::DataEkin;
   }
   static void *newArray_DataEkin(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataEkin[nElements] : new ::DataEkin[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataEkin(void *p) {
      delete ((::DataEkin*)p);
   }
   static void deleteArray_DataEkin(void *p) {
      delete [] ((::DataEkin*)p);
   }
   static void destruct_DataEkin(void *p) {
      typedef ::DataEkin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataEkin

//______________________________________________________________________________
void SelH10::Streamer(TBuffer &R__b)
{
   // Stream an object of class SelH10.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SelH10::Class(),this);
   } else {
      R__b.WriteClassBuffer(SelH10::Class(),this);
   }
}

//______________________________________________________________________________
void SelH10::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SelH10.
      TClass *R__cl = ::SelH10::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "treenumber", &treenumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstFileOfRun", &firstFileOfRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numInChain", &numInChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnum", &eventnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numfilled", &numfilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "blocksize", &blocksize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "swmain", &swmain);
      R__insp.InspectMember(swmain, "swmain.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "swgroup", &swgroup);
      R__insp.InspectMember(swgroup, "swgroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h10type", &h10type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dH10", &dH10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_h10e1f", &is_h10e1f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_h10e16", &is_h10e16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_h10exp", &is_h10exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_h10sim", &is_h10sim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10exp", &h10exp);
      R__insp.InspectMember(h10exp, "h10exp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10dtype", &h10dtype);
      R__insp.InspectMember(h10dtype, "h10dtype.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h10skim", &h10skim);
      R__insp.InspectMember(h10skim, "h10skim.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dAna", &dAna);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "procs", (void*)&procs);
      R__insp.InspectMember("vector<EpProcessor*>", (void*)&procs, "procs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*topProc", &topProc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lastProcName", &lastProcName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileOut", &fFileOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProofFile", &fProofFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutFileName", &fOutFileName);
      TSelector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SelH10(void *p) {
      return  p ? new(p) ::SelH10 : new ::SelH10;
   }
   static void *newArray_SelH10(Long_t nElements, void *p) {
      return p ? new(p) ::SelH10[nElements] : new ::SelH10[nElements];
   }
   // Wrapper around operator delete
   static void delete_SelH10(void *p) {
      delete ((::SelH10*)p);
   }
   static void deleteArray_SelH10(void *p) {
      delete [] ((::SelH10*)p);
   }
   static void destruct_SelH10(void *p) {
      typedef ::SelH10 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SelH10

/********************************************************
* ep_dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableep_dict();

extern "C" void G__set_cpp_environmentep_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("data_h10.h");
  G__add_compiledheader("data_ana.h");
  G__add_compiledheader("data_eid.h");
  G__add_compiledheader("data_efid.h");
  G__add_compiledheader("data_skim_q.h");
  G__add_compiledheader("data_mom.h");
  G__add_compiledheader("data_pid.h");
  G__add_compiledheader("data_ekin.h");
  G__add_compiledheader("data_top.h");
  G__add_compiledheader("sel_h10.h");
  G__add_compiledheader("particle_constants.h");
  G__cpp_reset_tagtableep_dict();
}
#include <new>
extern "C" int G__cpp_dllrevep_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DataH10 */
static int G__ep_dict_557_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataH10* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataH10(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) DataH10(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_557_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Bind((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_557_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Reconcile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_557_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataH10*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_557_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataH10* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataH10(*(DataH10*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataH10 G__TDataH10;
static int G__ep_dict_557_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataH10*) (soff+(sizeof(DataH10)*i)))->~G__TDataH10();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataH10*) (soff))->~G__TDataH10();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_557_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataH10* dest = (DataH10*) G__getstructoffset();
   *dest = *(DataH10*) libp->para[0].ref;
   const DataH10& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataEid */
static int G__ep_dict_559_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEid[n];
     } else {
       p = new((void*) gvp) DataEid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEid;
     } else {
       p = new((void*) gvp) DataEid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_559_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataEid*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_559_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataEid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataEid(*(DataEid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataEid G__TDataEid;
static int G__ep_dict_559_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataEid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataEid*) (soff+(sizeof(DataEid)*i)))->~G__TDataEid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataEid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataEid*) (soff))->~G__TDataEid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_559_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEid* dest = (DataEid*) G__getstructoffset();
   *dest = *(DataEid*) libp->para[0].ref;
   const DataEid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataEFid */
static int G__ep_dict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEFid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEFid[n];
     } else {
       p = new((void*) gvp) DataEFid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEFid;
     } else {
       p = new((void*) gvp) DataEFid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEFid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataEFid*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataEFid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataEFid(*(DataEFid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEFid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataEFid G__TDataEFid;
static int G__ep_dict_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataEFid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataEFid*) (soff+(sizeof(DataEFid)*i)))->~G__TDataEFid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataEFid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataEFid*) (soff))->~G__TDataEFid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEFid* dest = (DataEFid*) G__getstructoffset();
   *dest = *(DataEFid*) libp->para[0].ref;
   const DataEFid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataSkimQ */
static int G__ep_dict_561_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSkimQ* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSkimQ[n];
     } else {
       p = new((void*) gvp) DataSkimQ[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSkimQ;
     } else {
       p = new((void*) gvp) DataSkimQ;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_561_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSkimQ*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_561_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataSkimQ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataSkimQ(*(DataSkimQ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataSkimQ G__TDataSkimQ;
static int G__ep_dict_561_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataSkimQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataSkimQ*) (soff+(sizeof(DataSkimQ)*i)))->~G__TDataSkimQ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataSkimQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataSkimQ*) (soff))->~G__TDataSkimQ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_561_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSkimQ* dest = (DataSkimQ*) G__getstructoffset();
   *dest = *(DataSkimQ*) libp->para[0].ref;
   const DataSkimQ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataMom */
static int G__ep_dict_562_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataMom* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataMom[n];
     } else {
       p = new((void*) gvp) DataMom[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataMom;
     } else {
       p = new((void*) gvp) DataMom;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataMom));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_562_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataMom*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_562_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataMom* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataMom(*(DataMom*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataMom));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataMom G__TDataMom;
static int G__ep_dict_562_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataMom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataMom*) (soff+(sizeof(DataMom)*i)))->~G__TDataMom();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataMom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataMom*) (soff))->~G__TDataMom();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_562_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataMom* dest = (DataMom*) G__getstructoffset();
   *dest = *(DataMom*) libp->para[0].ref;
   const DataMom& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataPid */
static int G__ep_dict_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataPid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataPid[n];
     } else {
       p = new((void*) gvp) DataPid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataPid;
     } else {
       p = new((void*) gvp) DataPid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataPid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataPid*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_563_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataPid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataPid(*(DataPid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataPid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataPid G__TDataPid;
static int G__ep_dict_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataPid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataPid*) (soff+(sizeof(DataPid)*i)))->~G__TDataPid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataPid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataPid*) (soff))->~G__TDataPid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataPid* dest = (DataPid*) G__getstructoffset();
   *dest = *(DataPid*) libp->para[0].ref;
   const DataPid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataEkin */
static int G__ep_dict_564_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEkin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEkin[n];
     } else {
       p = new((void*) gvp) DataEkin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataEkin;
     } else {
       p = new((void*) gvp) DataEkin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEkin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_564_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataEkin*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_564_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataEkin* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataEkin(*(DataEkin*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataEkin));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataEkin G__TDataEkin;
static int G__ep_dict_564_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataEkin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataEkin*) (soff+(sizeof(DataEkin)*i)))->~G__TDataEkin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataEkin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataEkin*) (soff))->~G__TDataEkin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_564_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataEkin* dest = (DataEkin*) G__getstructoffset();
   *dest = *(DataEkin*) libp->para[0].ref;
   const DataEkin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataTop */
static int G__ep_dict_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTop* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTop[n];
     } else {
       p = new((void*) gvp) DataTop[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataTop;
     } else {
       p = new((void*) gvp) DataTop;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataTop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataTop*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataTop* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataTop(*(DataTop*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataTop));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataTop G__TDataTop;
static int G__ep_dict_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataTop*) (soff+(sizeof(DataTop)*i)))->~G__TDataTop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataTop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataTop*) (soff))->~G__TDataTop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataTop* dest = (DataTop*) G__getstructoffset();
   *dest = *(DataTop*) libp->para[0].ref;
   const DataTop& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataAna */
static int G__ep_dict_567_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataAna[n];
     } else {
       p = new((void*) gvp) DataAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataAna;
     } else {
       p = new((void*) gvp) DataAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->makeHistsEid((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->makeHistsEFid((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->makeHistsMomCor((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->makeHistsPid((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->makeHistsEkin((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataAna*) G__getstructoffset())->makeHistsEkin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataAna*) G__getstructoffset())->makeHistsMM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataAna*) G__getstructoffset())->makeYields());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->writeHists((TObjArray**) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataAna*) G__getstructoffset())->deleteHists((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsEid((TObjArray**) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsEid((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsEFid((TObjArray**) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsEFid((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsMomCor((TObjArray**) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsMomCor((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsPid((TObjArray**) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsPid((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsEkin((TObjArray**) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsEkin((TObjArray**) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsEkin((TObjArray*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsEkin((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillHistsMM((TObjArray*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillHistsMM((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_567_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((DataAna*) G__getstructoffset())->fillYields((TObjArray*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DataAna*) G__getstructoffset())->fillYields((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ep_dict_567_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataAna* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataAna(*(DataAna*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_DataAna));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataAna G__TDataAna;
static int G__ep_dict_567_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataAna*) (soff+(sizeof(DataAna)*i)))->~G__TDataAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataAna*) (soff))->~G__TDataAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ep_dict_567_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataAna* dest = (DataAna*) G__getstructoffset();
   *dest = *(DataAna*) libp->para[0].ref;
   const DataAna& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleConstants */
static int G__ep_dict_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ParticleConstants::GetPdgMass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* SelH10 */
static int G__ep_dict_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SelH10* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SelH10((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SelH10((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new SelH10[n];
       } else {
         p = new((void*) gvp) SelH10[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new SelH10;
       } else {
         p = new((void*) gvp) SelH10;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ep_dictLN_SelH10));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SelH10::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelH10::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SelH10::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SelH10::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelH10*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelH10::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SelH10::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelH10::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ep_dict_636_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SelH10::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SelH10 G__TSelH10;
static int G__ep_dict_636_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SelH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SelH10*) (soff+(sizeof(SelH10)*i)))->~G__TSelH10();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SelH10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SelH10*) (soff))->~G__TSelH10();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DataH10 */

/* DataEid */

/* DataEFid */

/* DataSkimQ */

/* DataMom */

/* DataPid */

/* DataEkin */

/* DataTop */

/* DataAna */

/* ParticleConstants */

/* SelH10 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncep_dict {
 public:
  G__Sizep2memfuncep_dict(): p(&G__Sizep2memfuncep_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncep_dict::*p)();
};

size_t G__get_sizep2memfuncep_dict()
{
  G__Sizep2memfuncep_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceep_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ep_dictLN_SelH10))) {
     SelH10 *G__Lderived;
     G__Lderived=(SelH10*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ep_dictLN_SelH10),G__get_linked_tagnum(&G__ep_dictLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ep_dictLN_SelH10),G__get_linked_tagnum(&G__ep_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableep_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ep_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("partMap",117,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EpProcessor*>",117,G__get_linked_tagnum(&G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ep_dictLN_reverse_iteratorlEvectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DataH10 */
static void G__setup_memvarDataH10(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   { DataH10 *p; p=(DataH10*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TTree),-1,-1,1,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is_e1f)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_e1f=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is_e16)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_e16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is_exp)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_exp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is_sim)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_sim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,1,"exp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtype)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,1,"dtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->skim)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,1,"skim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fn)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fn[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bn)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"bn[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_4vE0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-1,1,"_4vE0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_4vP0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-1,1,"_4vP0=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("_MAX_PARTS=%lldLL",(long long)DataH10::_MAX_PARTS).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evntid)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"evntid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evthel)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"evthel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->npart)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->q_l)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"q_l=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t_l)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"t_l=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tr_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tr_time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gpart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"gpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"id[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->stat)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"stat[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->dc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"dc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"cc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->sc)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->ec)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"ec[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"m[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->q)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"q[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->b)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cx[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cy[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->cz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cz[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vx[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vy[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vz[40]=",0,"[gpart]");
   G__memvar_setup((void*)((long)(&p->dc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"dc_sect[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_stat)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"dc_stat[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_xsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_xsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_ysc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_ysc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_zsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_zsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_cxsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_cxsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_cysc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_cysc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->dc_czsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_czsc[40]=",0,"[dc_part]");
   G__memvar_setup((void*)((long)(&p->ec_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ec_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ec_stat)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ec_stat[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"ec_sect[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"etot[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_ei[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_eo[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_x[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_y[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->ech_z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_z[40]=",0,"[ec_part]");
   G__memvar_setup((void*)((long)(&p->sc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_sect[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_pd)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_pd[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_stat)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sc_stat[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_t)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_t[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->sc_r)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_r[40]=",0,"[sc_part]");
   G__memvar_setup((void*)((long)(&p->cc_part)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc_sect)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"cc_sect[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_segm[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->nphe)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"nphe[40]=",0,"[cc_part]");
   G__memvar_setup((void*)((long)(&p->vidmvrt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"vidmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrmvrt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xmvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"xmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ymvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ymvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zmvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ch2mvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ch2mvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cxxmvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cxxmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cxymvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cxymvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cxzmvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cxzmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cyymvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cyymvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cyzmvrt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cyzmvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stamvrt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"stamvrt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcnentr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcnentr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcnpart)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"mcnpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcst[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcid[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcpid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcpid[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mctheta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mctheta[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcphi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcphi[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcp)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcp[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcm[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvx[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvy[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mcvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mcvz[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->mctof)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mctof[40]=",0,"[mcnentr]");
   G__memvar_setup((void*)((long)(&p->tmpVars)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataH10cLcLtmp),-1,-1,1,"tmpVars=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_dc_vx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_vx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_vy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_vy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_vz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_vz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vidmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vidmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ntrmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ntrmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_xmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_xmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ymvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ymvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_zmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_zmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ch2mvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ch2mvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cxxmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cxxmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cxymvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cxymvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cxzmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cxzmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cyymvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cyymvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cyzmvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cyzmvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_stamvrt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_stamvrt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcnentr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcnentr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcnpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcnpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcst)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcst=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcpid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcpid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mctheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mctheta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcphi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcm=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcvz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mcvz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mctof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_mctof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_evthel)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_evthel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_evntid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_evntid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_npart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_npart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_q_l)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_q_l=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_t_l)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_t_l=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_tr_time)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_tr_time=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_gpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_gpart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_id=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_p=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_m)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_m=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_q)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_q=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_b=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_vz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_xsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_xsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_ysc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_ysc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_zsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_zsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_cxsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_cxsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_cysc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_cysc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dc_czsc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_dc_czsc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_etot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_etot=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_ei)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_ei=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ec_eo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ec_eo=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_x=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ech_z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_ech_z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_pd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_pd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_stat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_stat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_t)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_t=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sc_r)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_sc_r=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_part=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_sect)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_sect=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cc_segm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_cc_segm=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nphe)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TBranch),-1,-1,1,"b_nphe=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* DataEid */
static void G__setup_memvarDataEid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEid));
   { DataEid *p; p=(DataEid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaStrE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaStrE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dtE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_ei=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_eo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nphe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nphe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_segm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc_theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc_theta=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataEFid */
static void G__setup_memvarDataEFid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEFid));
   { DataEFid *p; p=(DataEFid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fidE)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fidE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dc_xsc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_xsc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dc_ysc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dc_ysc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ech_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ech_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ech_y=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataSkimQ */
static void G__setup_memvarDataSkimQ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ));
   { DataSkimQ *p; p=(DataSkimQ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEVT_2POS_EX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isEVT_2POS_EX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEVT_1POS1NEG_EX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isEVT_1POS1NEG_EX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEVT_2POS1NEG_EX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isEVT_2POS1NEG_EX=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataMom */
static void G__setup_memvarDataMom(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataMom));
   { DataMom *p; p=(DataMom*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dcx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dcy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dcz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dp)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dp=",0,"momentum corrections for electron");
   }
   G__tag_memvar_reset();
}


   /* DataPid */
static void G__setup_memvarDataPid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataPid));
   { DataPid *p; p=(DataPid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10IdxP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10IdxP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10IdxPip)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10IdxPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10IdxPim)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10IdxPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sectorP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sectorP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sectorPip)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sectorPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sectorPim)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sectorPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaPip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaPim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pPip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pPim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaStrP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaStrP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaStrPip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaStrPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaStrPim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaStrPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dtP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtPip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dtPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtPim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dtPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"P_ec_ei=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"P_ec_eo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"P_etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pip_ec_ei=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pip_ec_eo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pip_etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_ec_ei)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pim_ec_ei=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_ec_eo)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pim_ec_eo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pim_etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_nphe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"P_nphe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"P_cc_segm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P_cc_theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"P_cc_theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_nphe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pip_nphe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pip_cc_segm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pip_cc_theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pip_cc_theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_nphe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pim_nphe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_cc_segm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pim_cc_segm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pim_cc_theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pim_cc_theta=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataEkin */
static void G__setup_memvarDataEkin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEkin));
   { DataEkin *p; p=(DataEkin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->W)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"W=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Q2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xb)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"xb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"theta1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phi1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phi=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataTop */
static void G__setup_memvarDataTop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataTop));
   { DataTop *p; p=(DataTop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mm2ppippim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mm2ppippim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmppippim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmppippim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mm2ppip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mm2ppip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmppip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmppip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mm2ppim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mm2ppim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmppim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmppim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mm2pippim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mm2pippim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpippim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpippim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->W)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"W=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Q2=",0,"morand");
   G__memvar_setup((void*)((long)(&p->h)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->varset1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataTopcLcLvars),-1,-1,1,"varset1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->varset2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataTopcLcLvars),-1,-1,1,"varset2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->varset3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataTopcLcLvars),-1,-1,1,"varset3=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataAna */
static void G__setup_memvarDataAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_DataAna));
   { DataAna *p; p=(DataAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->opart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"opart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10idxE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10idxE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10idxP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10idxP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10idxPip)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10idxPip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h10idxPim)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"h10idxPim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->top)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"top=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataEid),-1,-1,1,"eid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataEFid),-1,-1,1,"efid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->skimq)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ),-1,-1,1,"skimq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataPid),-1,-1,1,"pid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataMom),-1,-1,1,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eKin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataEkin),-1,-1,1,"eKin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eKin_mc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataEkin),-1,-1,1,"eKin_mc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dTop)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataTop),-1,-1,1,"dTop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dTop_mc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataTop),-1,-1,1,"dTop_mc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngQ2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngQ2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngW)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngW=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngMppip)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngMppip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngMppim)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngMppim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngMpippim)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngMpippim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngTheta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngTheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bngAlpha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAnacLcLh8Dbng),-1,-1,1,"bngAlpha=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ParticleConstants */
static void G__setup_memvarParticleConstants(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   {
   G__memvar_setup((void*)(&ParticleConstants::SOL),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"SOL=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PROTON=%lldLL",(long long)ParticleConstants::PROTON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("NEUTRON=%lldLL",(long long)ParticleConstants::NEUTRON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PIP=%lldLL",(long long)ParticleConstants::PIP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PIM=%lldLL",(long long)ParticleConstants::PIM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PI0=%lldLL",(long long)ParticleConstants::PI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("KP=%lldLL",(long long)ParticleConstants::KP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("KM=%lldLL",(long long)ParticleConstants::KM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PHOTON=%lldLL",(long long)ParticleConstants::PHOTON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("ELECTRON=%lldLL",(long long)ParticleConstants::ELECTRON).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_P),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_P=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_N),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_N=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_E),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_E=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PIP),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PIP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PIM),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PIM=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_PI0),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_PI0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_KP),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_KP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_KM),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_KM=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_G),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_G=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::MASS_OMEGA),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"MASS_OMEGA=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::PARTMAP),117,0,0,G__get_linked_tagnum(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("partMap"),-2,1,"PARTMAP=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E1F_P),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"E1F_P=",0,"changed from 5.479 --> 5.499");
   G__memvar_setup((void*)(&ParticleConstants::E1F_4vE0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E1F_4vE0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E1F_4vP0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E1F_4vP0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E16_P),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"E16_P=",0,"changed from 5.700 post parkkj conversation on mtg 02-25-13");
   G__memvar_setup((void*)(&ParticleConstants::E16_4vE0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E16_4vE0=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleConstants::E16_4vP0),117,0,1,G__get_linked_tagnum(&G__ep_dictLN_TLorentzVector),-1,-2,1,"E16_4vP0=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SelH10 */
static void G__setup_memvarSelH10(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ep_dictLN_SelH10));
   { SelH10 *p; p=(SelH10*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"treenumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"firstFileOfRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"numInChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"eventnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"numfilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"blocksize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TStopwatch),-1,-1,4,"swmain=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TStopwatch),-1,-1,4,"swgroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TTree),-1,-1,4,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TNamed),-1,-1,4,"h10type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataH10),-1,-1,4,"dH10=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is_h10e1f=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is_h10e16=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is_h10exp=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"is_h10sim=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,4,"h10exp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,4,"h10dtype=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,4,"h10skim=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_DataAna),-1,-1,4,"dAna=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR),G__defined_typename("vector<EpProcessor*>"),-1,4,"procs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_EpProcessor),-1,-1,4,"topProc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TObjString),-1,-1,4,"lastProcName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TFile),-1,-1,4,"fFileOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TProofOutputFile),-1,-1,4,"fProofFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ep_dictLN_TString),-1,-1,4,"fOutFileName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarep_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDataH10(void) {
   /* DataH10 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataH10));
   G__memfunc_setup("DataH10",547,G__ep_dict_557_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - h10type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bind",381,G__ep_dict_557_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconcile",916,G__ep_dict_557_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_557_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataH10", 547, G__ep_dict_557_0_5, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 0, 1, 1, 1, 0, "u 'DataH10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataH10", 673, G__ep_dict_557_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_557_0_7, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataH10), -1, 1, 1, 1, 1, 0, "u 'DataH10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataEid(void) {
   /* DataEid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEid));
   G__memfunc_setup("DataEid",652,G__ep_dict_559_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataEid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_559_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataEid", 652, G__ep_dict_559_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataEid), -1, 0, 1, 1, 1, 0, "u 'DataEid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataEid", 778, G__ep_dict_559_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_559_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataEid), -1, 1, 1, 1, 1, 0, "u 'DataEid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataEFid(void) {
   /* DataEFid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEFid));
   G__memfunc_setup("DataEFid",722,G__ep_dict_560_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataEFid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_560_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataEFid", 722, G__ep_dict_560_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataEFid), -1, 0, 1, 1, 1, 0, "u 'DataEFid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataEFid", 848, G__ep_dict_560_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_560_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataEFid), -1, 1, 1, 1, 1, 0, "u 'DataEFid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataSkimQ(void) {
   /* DataSkimQ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ));
   G__memfunc_setup("DataSkimQ",863,G__ep_dict_561_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_561_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataSkimQ", 863, G__ep_dict_561_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ), -1, 0, 1, 1, 1, 0, "u 'DataSkimQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataSkimQ", 989, G__ep_dict_561_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_561_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataSkimQ), -1, 1, 1, 1, 1, 0, "u 'DataSkimQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataMom(void) {
   /* DataMom */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataMom));
   G__memfunc_setup("DataMom",675,G__ep_dict_562_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataMom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_562_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataMom", 675, G__ep_dict_562_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataMom), -1, 0, 1, 1, 1, 0, "u 'DataMom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataMom", 801, G__ep_dict_562_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_562_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataMom), -1, 1, 1, 1, 1, 0, "u 'DataMom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataPid(void) {
   /* DataPid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataPid));
   G__memfunc_setup("DataPid",663,G__ep_dict_563_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataPid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_563_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataPid", 663, G__ep_dict_563_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataPid), -1, 0, 1, 1, 1, 0, "u 'DataPid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataPid", 789, G__ep_dict_563_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_563_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataPid), -1, 1, 1, 1, 1, 0, "u 'DataPid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataEkin(void) {
   /* DataEkin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataEkin));
   G__memfunc_setup("DataEkin",769,G__ep_dict_564_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataEkin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_564_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataEkin", 769, G__ep_dict_564_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataEkin), -1, 0, 1, 1, 1, 0, "u 'DataEkin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataEkin", 895, G__ep_dict_564_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_564_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataEkin), -1, 1, 1, 1, 1, 0, "u 'DataEkin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataTop(void) {
   /* DataTop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataTop));
   G__memfunc_setup("DataTop",685,G__ep_dict_565_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataTop), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_565_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataTop", 685, G__ep_dict_565_0_3, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataTop), -1, 0, 1, 1, 1, 0, "u 'DataTop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataTop", 811, G__ep_dict_565_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_565_0_5, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataTop), -1, 1, 1, 1, 1, 0, "u 'DataTop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataAna(void) {
   /* DataAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_DataAna));
   G__memfunc_setup("DataAna",650,G__ep_dict_567_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_DataAna), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ep_dict_567_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsEid",1211,G__ep_dict_567_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsEFid",1281,G__ep_dict_567_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsMomCor",1526,G__ep_dict_567_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsPid",1222,G__ep_dict_567_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsEkin",1328,G__ep_dict_567_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsEkin",1328,G__ep_dict_567_0_8, 85, G__get_linked_tagnum(&G__ep_dictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeHistsMM",1091,G__ep_dict_567_0_9, 85, G__get_linked_tagnum(&G__ep_dictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeYields",1032,G__ep_dict_567_0_10, 85, G__get_linked_tagnum(&G__ep_dictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHists",1078,G__ep_dict_567_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists U 'TDirectory' - 0 - dirout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteHists",1150,G__ep_dict_567_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 2 - hists", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsEid",1220,G__ep_dict_567_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsEFid",1290,G__ep_dict_567_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsMomCor",1535,G__ep_dict_567_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsPid",1231,G__ep_dict_567_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsEkin",1337,G__ep_dict_567_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 2 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsEkin",1337,G__ep_dict_567_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistsMM",1100,G__ep_dict_567_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillYields",1041,G__ep_dict_567_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObjArray' - 0 - hists g - 'Bool_t' 0 'kFALSE' useMc", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataAna", 650, G__ep_dict_567_0_21, (int) ('i'), G__get_linked_tagnum(&G__ep_dictLN_DataAna), -1, 0, 1, 1, 1, 0, "u 'DataAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataAna", 776, G__ep_dict_567_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ep_dict_567_0_23, (int) ('u'), G__get_linked_tagnum(&G__ep_dictLN_DataAna), -1, 1, 1, 1, 1, 0, "u 'DataAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleConstants(void) {
   /* ParticleConstants */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_ParticleConstants));
   G__memfunc_setup("GetPdgMass",975,G__ep_dict_624_0_1, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - pdgId", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t))(&ParticleConstants::GetPdgMass) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSelH10(void) {
   /* SelH10 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ep_dictLN_SelH10));
   G__memfunc_setup("SelH10",461,G__ep_dict_636_0_1, 105, G__get_linked_tagnum(&G__ep_dictLN_SelH10), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInputList",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ep_dict_636_0_12, 85, G__get_linked_tagnum(&G__ep_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SelH10::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ep_dict_636_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelH10::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ep_dict_636_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SelH10::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ep_dict_636_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SelH10::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ep_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ep_dict_636_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ep_dict_636_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelH10::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ep_dict_636_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SelH10::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ep_dict_636_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelH10::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ep_dict_636_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SelH10::DeclFileLine) ), 0);
   G__memfunc_setup("mkdir",535,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ep_dictLN_TDirectory), -1, 0, 1, 1, 4, 0, "C - - 10 - dirname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupProcs",1048,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SelH10", 587, G__ep_dict_636_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncep_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalep_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcep_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ep_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataH10 = { "DataH10" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataH10cLcLtmp = { "DataH10::tmp" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_DataEid = { "DataEid" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataEFid = { "DataEFid" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataSkimQ = { "DataSkimQ" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataMom = { "DataMom" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataPid = { "DataPid" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataEkin = { "DataEkin" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataTop = { "DataTop" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataTopcLcLvars = { "DataTop::vars" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_DataAna = { "DataAna" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_DataAnacLcLh8Dbng = { "DataAna::h8Dbng" , 115 , -1 };
G__linked_taginfo G__ep_dictLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_TProofOutputFile = { "TProofOutputFile" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_ParticleConstants = { "ParticleConstants" , 110 , -1 };
G__linked_taginfo G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_EpProcessor = { "EpProcessor" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_SelH10 = { "SelH10" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR = { "vector<EpProcessor*,allocator<EpProcessor*> >" , 99 , -1 };
G__linked_taginfo G__ep_dictLN_reverse_iteratorlEvectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<EpProcessor*,allocator<EpProcessor*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableep_dict() {
  G__ep_dictLN_TClass.tagnum = -1 ;
  G__ep_dictLN_TBuffer.tagnum = -1 ;
  G__ep_dictLN_TDirectory.tagnum = -1 ;
  G__ep_dictLN_TMemberInspector.tagnum = -1 ;
  G__ep_dictLN_TObject.tagnum = -1 ;
  G__ep_dictLN_TNamed.tagnum = -1 ;
  G__ep_dictLN_TString.tagnum = -1 ;
  G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ep_dictLN_TList.tagnum = -1 ;
  G__ep_dictLN_TObjArray.tagnum = -1 ;
  G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ep_dictLN_TFile.tagnum = -1 ;
  G__ep_dictLN_TTree.tagnum = -1 ;
  G__ep_dictLN_TBranch.tagnum = -1 ;
  G__ep_dictLN_TObjString.tagnum = -1 ;
  G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ep_dictLN_TSelector.tagnum = -1 ;
  G__ep_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ep_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ep_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ep_dictLN_TLorentzVector.tagnum = -1 ;
  G__ep_dictLN_DataH10.tagnum = -1 ;
  G__ep_dictLN_DataH10cLcLtmp.tagnum = -1 ;
  G__ep_dictLN_DataEid.tagnum = -1 ;
  G__ep_dictLN_DataEFid.tagnum = -1 ;
  G__ep_dictLN_DataSkimQ.tagnum = -1 ;
  G__ep_dictLN_DataMom.tagnum = -1 ;
  G__ep_dictLN_DataPid.tagnum = -1 ;
  G__ep_dictLN_DataEkin.tagnum = -1 ;
  G__ep_dictLN_DataTop.tagnum = -1 ;
  G__ep_dictLN_DataTopcLcLvars.tagnum = -1 ;
  G__ep_dictLN_DataAna.tagnum = -1 ;
  G__ep_dictLN_DataAnacLcLh8Dbng.tagnum = -1 ;
  G__ep_dictLN_TStopwatch.tagnum = -1 ;
  G__ep_dictLN_TProofOutputFile.tagnum = -1 ;
  G__ep_dictLN_ParticleConstants.tagnum = -1 ;
  G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__ep_dictLN_EpProcessor.tagnum = -1 ;
  G__ep_dictLN_SelH10.tagnum = -1 ;
  G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR.tagnum = -1 ;
  G__ep_dictLN_reverse_iteratorlEvectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableep_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TObjString);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TSelector);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataH10),sizeof(DataH10),-1,295936,(char*)NULL,G__setup_memvarDataH10,G__setup_memfuncDataH10);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_DataH10cLcLtmp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataEid),sizeof(DataEid),-1,263424,(char*)NULL,G__setup_memvarDataEid,G__setup_memfuncDataEid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataEFid),sizeof(DataEFid),-1,263424,(char*)NULL,G__setup_memvarDataEFid,G__setup_memfuncDataEFid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataSkimQ),sizeof(DataSkimQ),-1,263424,(char*)NULL,G__setup_memvarDataSkimQ,G__setup_memfuncDataSkimQ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataMom),sizeof(DataMom),-1,263424,(char*)NULL,G__setup_memvarDataMom,G__setup_memfuncDataMom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataPid),sizeof(DataPid),-1,263424,(char*)NULL,G__setup_memvarDataPid,G__setup_memfuncDataPid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataEkin),sizeof(DataEkin),-1,263424,(char*)NULL,G__setup_memvarDataEkin,G__setup_memfuncDataEkin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataTop),sizeof(DataTop),-1,263424,(char*)NULL,G__setup_memvarDataTop,G__setup_memfuncDataTop);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_DataTopcLcLvars);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_DataAna),sizeof(DataAna),-1,263424,(char*)NULL,G__setup_memvarDataAna,G__setup_memfuncDataAna);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_DataAnacLcLh8Dbng);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_TProofOutputFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_ParticleConstants),0,-1,262144,(char*)NULL,G__setup_memvarParticleConstants,G__setup_memfuncParticleConstants);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_EpProcessor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ep_dictLN_SelH10),sizeof(SelH10),-1,292096,(char*)NULL,G__setup_memvarSelH10,G__setup_memfuncSelH10);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_vectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ep_dictLN_reverse_iteratorlEvectorlEEpProcessormUcOallocatorlEEpProcessormUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupep_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupep_dict()");
  G__set_cpp_environmentep_dict();
  G__cpp_setup_tagtableep_dict();

  G__cpp_setup_inheritanceep_dict();

  G__cpp_setup_typetableep_dict();

  G__cpp_setup_memvarep_dict();

  G__cpp_setup_memfuncep_dict();
  G__cpp_setup_globalep_dict();
  G__cpp_setup_funcep_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncep_dict();
  return;
}
class G__cpp_setup_initep_dict {
  public:
    G__cpp_setup_initep_dict() { G__add_setup_func("ep_dict",(G__incsetup)(&G__cpp_setupep_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initep_dict() { G__remove_setup_func("ep_dict"); }
};
G__cpp_setup_initep_dict G__cpp_setup_initializerep_dict;

