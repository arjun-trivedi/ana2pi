#!/usr/bin/python
from proc_yields import ProcYields
from disp_yields import DispYields
import sys,time

"""
py [obsdir] [dtyps] [simnum=siml] [topcmbns=1:2:3:4] [q2min=1.25] [q2min=3.25] [usehel=False] [dbg=False] 
"""
if len(sys.argv)<3:
	sys.exit("Not all parameters entered. obsdir and dtyps are required")

obsdir=sys.argv[1]

dtypl=[]
for dtyp in sys.argv[2].split(":"):
	if dtyp!="sim" and dtyp!="exp":
		sys.exit("valid dtyps are sim and exp only!")
	dtypl.append(dtyp)

if len(sys.argv)>3:#i.e. simnum entered by user
	simnum=sys.argv[3]
else:
	simnum='siml'

topcmbnl=[]
if len(sys.argv)>4:#i.e. topcmbns by user
	topcmbns=sys.argv[4].split("_")
	if len(topcmbns)>0:
		for topcmbn in topcmbns:
			topcmbn=topcmbn.split(':')
			topcmbn=map(int,topcmbn)
			#print "top=",top
			for top in topcmbn:
				if top!=1 and top!=2 and top!=3 and top!=4:
					sys.exit("Please enter each top as 1:2 or 2 or 1:2:3:4 etc")
			topcmbnl.append(topcmbn)
	else:
		sys.exit("Please enter topcmbn as 1:2;2;1:2:3:4")
else:
	topcmbnl.append([1,2,3,4])

if len(sys.argv)>5:#i.e. q2min entered by user
        q2min=float(sys.argv[5])
else:
        q2min=1.25

if len(sys.argv)>6:#i.e. q2max entered by user
        q2max=float(sys.argv[6])
else:
        q2max=3.25

if len(sys.argv)>7:#i.e. usehel entered by user
        if   sys.argv[7]=='True':  usehel=True
	elif sys.argv[7]=='False': usehel=False
        else: sys.exit("usehel=\'%s\' not valid. Exiting."%sys.argv[7])
	
else:
        usehel=False

if len(sys.argv)>8:#i.e. dbg entered by user
	if   sys.argv[8]=='True':  dbg=True
        elif sys.argv[8]=='False': dbg=False
        else: sys.exit("dbg=\'%s\' not valid. Exiting"%sys.argv[8])
else:
        dbg=False

print "py: Going to process yields for (obsdir dtyps simmnum topcmbns q2min q2max usehel debug)=(", obsdir,dtypl,simnum,topcmbnl,q2min,q2max,usehel,dbg,")"
time.sleep(3)
for dtyp in dtypl:
	for topcmbn in topcmbnl:
		py=ProcYields(obsdir,dtyp,simnum=simnum,tops=topcmbn,q2min=q2min,q2max=q2max,usehel=usehel,dbg=dbg)#,wmin=1.725)
		py.execute()
