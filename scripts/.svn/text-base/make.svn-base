#!/bin/tcsh
# $0 = make_<yield/mcyield/skim/q2wSel>_<e1fd1/e1fd2/e1fs1/e1fs2> 
# $1 = <skim>; by default <skim> = h10
# $2 = Number of entries to process
# $3 = monmode; by default = 0 

#################################
# set foutname (Determined from if 'make_yield'/'make_mcyield'/'make_skim'/'make_q2wSel') 
#################################
@ make_yield = 0;
@ make_mcyield = 0;
@ make_skim = 0
@ make_q2wSel = 0
if ($0 =~ *_yield_*) then
  echo "will make yield"
  @ make_yield = 1;
  set foutname = yield.root
else if ($0 =~ *_mcyield_*) then
  echo "will make mcyield"
  @ make_mcyield = 1;
  set foutname = mcyield.root
else if ($0 =~ *_skim_*) then
  @ make_skim = 1;
else if ($0 =~ *_q2wSel_*) then
  @ make_q2wSel = 1;
else
  echo "could not recognize 'make_yield/mcyield/skim/q2wSel'"
  echo "usage:"
  echo "make_<yield/mcyield/skim/q2wSel>_<exp><dtype><q2wsel#> <skim=h10> <nevts=1000000000> <monmode=0>"
  exit
endif

#################################
# set datadir,anadir, simlst (only applicable for simulation) (Determine <exp>.<dtype>)
# simlst = sim.Q2W_i; all 'i's, where i = incremental simulation 
#################################
@ sim = 0
@ exp = 0
if ( ($0 =~ *e1fs1) ) then
  echo "<exp>.<dtype> = e1f simulation 1"
  @ sim = 1 
  set datadir = $E1F_SIM2PI_DATADIR1
  set anadir  = $E1F_SIM2PI_ANADIR1
  cat ${HOME}/ongoing/e1fs1.lst > /tmp/simlst
else if ( ($0 =~ *e1fs2) ) then
  echo "<exp>.<dtype> = e1f simulation"
  @ sim = 1
  set datadir = $E1F_SIM2PI_DATADIR2
  set anadir  = $E1F_SIM2PI_ANADIR2
  cat ${HOME}/ongoing/e1fs2.lst > /tmp/simlst
else if ( ($0 =~ *e1fd1) ) then
  echo "<exp>.<dtype> = e1f experiment"
  @ exp = 1
  set datadir = $E1F_2PI_DATADIR1
  set anadir  = $E1F_2PI_ANADIR1
  echo "." > /tmp/simlst 
else if ( ($0 =~ *e1fd2) ) then
  echo "<exp>.<dtype> = e1f experiment"
  @ exp = 1
  set datadir = $E1F_2PI_DATADIR2
  set anadir  = $E1F_2PI_ANADIR2
  echo "." > /tmp/simlst
else
  echo "Could not recognize '<exp>.<dtype>=<e1f><exp/sim>'"
  exit
endif

#################################
# set fin (Determine from <skim>)
#################################
if ( "$1" == "h10skim" ) then 
  set skim = h10skim
  set finlst = $skim.lst
else if ( "$1" == "h10skim_2piCuts" ) then
  set skim = h10skim_2piCuts
  set finlst = $skim.lst
else
  set skim = h10 
  set finlst = $skim.lst
endif

###################
## set procorder ##
###################

# if monmode selected, then first set <monprocs>
if ( "$3" == 1 ) then
  set monmode = 1
  set monprocs = ":eidmon:efidmon:pidmon"
else 
  set monprocs = ""
endif

if($sim && $make_yield) then
  set procorder = '"'eid:efid:qskim:pid:top$monprocs'"'
else if ($sim && $make_mcyield) then
  set procorder = '"'top$monprocs'"'
else if ($sim && $make_skim && "$skim" == "h10skim") then
  set procorder = '"'fillskim$monprocs'"'
else if ($sim && $make_skim && "$skim" == "h10skim_2piCuts") then
  set procorder = '"'eid:efid:qskim:pid:fillskim$monprocs'"'
else if ($exp && $make_q2wSel) then
  set procorder = '"'q2wskim:copyh10$monprocs'"'
else if ($exp && $make_yield) then
  set procorder = '"'eid:efid:qskim:mom:pid:top$monprocs'"'
endif

#################################
#Determine nevts
#################################
if ($2) then
 set nevts = $2
 echo "going to run over $2 events"
else
 set nevts = 1000000000
endif

#################################
#Call runSelector(nevts, fin, fout, procorder)
#################################
foreach simnum ( `cat /tmp/simlst` )
  if ($make_skim) then #if ($make_skim)
    set h10datadir = $datadir/$simnum/h10
    set skimdir    = $datadir/$simnum/$skim
    if (! -e $skimdir) then
      mkdir $skimdir
    endif
    sub.runSelector $h10datadir $skimdir $procorder
  else if ($make_q2wSel) then #if ($make_q2wSel)
    set q2wFulldir = $datadir/Q2W__Full/h10
    set q2wSeldir = $datadir/$simnum/h10
    if (! -e $q2wSeldir) then
      mkdir $q2wSeldir
    endif
    sub.runSelector $q2wFulldir $q2wSeldir $procorder
  else #if ($make_yield || $make_mcyield)
    if (! -e $anadir/$simnum) then 
      mkdir $anadir/$simnum
    endif
    if (-e $anadir/$simnum/$finlst) then
      set bkdir = bk.`date +%m%d%y.%H%M`
      mkdir  $anadir/$simnum/$bkdir
      cp $anadir/$simnum/$finlst $anadir/$simnum/$bkdir/$finlst
    endif
    ls $datadir/$simnum/$skim/*.root > $anadir/$simnum/$finlst
  
    set fin =  '"'$anadir/$simnum/$finlst'"'
    if ($?monmode) then #i.e if monmode
      set fout = '"'$anadir/$simnum/monmode/$foutname'"'
    else
      if ( -e $anadir/$simnum/$foutname ) then
        if (-e $bkdir) then
          cp $anadir/$simnum/$foutname $anadir/$simnum/$bkdir/$foutname
        else
          set bkdir = bk.`date +%m%d%y.%H%M`
          mkdir  $anadir/$simnum/$bkdir
          cp $anadir/$simnum/$foutname $anadir/$simnum/$bkdir/$foutname 
        endif
        echo "$anadir/$simnum/$foutname exists! Backing it up in $bkdir"
        continue 
      endif
      set fout = '"'$anadir/$simnum/$foutname'"'
    endif

    echo "Going to make yield for $simnum"
    echo "nevts = $nevts"
    echo "fin = $fin"
    echo "fout = $fout" 
    echo "procorder = $procorder"
    sleep 4
    root -l -b -q "runSelector.C($nevts,$fin,$fout,$procorder)"
  endif
end
