#!/bin/tcsh

# $0 = procy_<e1fd1/e1fd2/e1fs1/e1fs2>
# OR
# $0 = procyh_<e1fd1/e1fd2/e1fs1/e1fs2>

# $1 = overwrite

# Determine type, datadirr and simlst from $0 
if ($0 =~ *_e1fd1*) then
  set usehel = 0
  set type = exp
  set datadir = $E1F_2PI_ANADIR1
  echo "." > /tmp/simlst
else if ($0 =~ *_e1fd2*) then
  set usehel = 0
  set type = exp
  set datadir = $E1F_2PI_ANADIR2
  echo "." > /tmp/simlst 
else if ($0 =~ *_e1fs1*) then
  set usehel = 0
  set type = sim
  set datadir = $E1F_SIM2PI_ANADIR1
  #cat ${HOME}/ongoing/e1fs1_cumulative.lst > /tmp/simlst
  cat ${HOME}/ongoing/e1fs1_cumulative_latest.lst > /tmp/simlst
else if ($0 =~ *_e1fs2*) then
  set usehel = 0
  set type = sim
  set datadir = $E1F_SIM2PI_ANADIR2
  #cat ${HOME}/ongoing/e1fs2_cumulative.lst > /tmp/simlst
  cat ${HOME}/ongoing/e1fs2_cumulative_latest.lst > /tmp/simlst
endif

if ($0 =~ *h_e1fd1*) then
  set usehel = 1
  set type = pol__exp
  set datadir = $E1F_2PI_ANADIR1
  echo "." > /tmp/simlst
else if ($0 =~ *h_e1fd2*) then
  set usehel = 1
  set type = pol__exp
  set datadir = $E1F_2PI_ANADIR2
  echo "." > /tmp/simlst 
else if ($0 =~ *h_e1fs1*) then
  set usehel = 1
  set type = pol__sim
  set datadir = $E1F_SIM2PI_ANADIR1
  #cat ${HOME}/ongoing/e1fs1_cumulative.lst > /tmp/simlst
  cat ${HOME}/ongoing/e1fs1_cumulative_latest.lst > /tmp/simlst
else if ($0 =~ *h_e1fs2*) then
  set usehel = 1
  set type = pol__sim
  set datadir = $E1F_SIM2PI_ANADIR2
  #cat ${HOME}/ongoing/e1fs2_cumulative.lst > /tmp/simlst
  cat ${HOME}/ongoing/e1fs2_cumulative_latest.lst > /tmp/simlst
endif

#Determine overwrite
if ($1) then
  @ overwrite = $1
else
  @ overwrite = 0
endif

# set top names and bng; at = Arjun Trivedi; vm = Victor Mokeev
set top1 = 1
set at_top2 = 2
set at_top3 = 3
set at_top4 = 4
set vm_top2 = 2:1
set vm_top3 = 3:1
set vm_top4 = 4:1
set top5 = 1:2:3:4
if ( $0 =~ *_e1fd1* || $0 =~ *_e1fs1*) then
  set nQ2bins = 1
  set Q2min = 1.400
  set Q2max = 1.500
  set nWbins = 8
  set Wmin = 1.600
  set Wmax = 1.800
else if ( $0 =~ *_e1fd2* || $0 =~ *_e1fs2*) then
  set nQ2bins = 1
  set Q2min = 2.000
  set Q2max = 2.400
  set nWbins = 24 
  set Wmin = 1.300
  set Wmax = 1.900
endif

# Process Yields
foreach sim ( `cat /tmp/simlst` )
  cd $datadir/$sim
  echo $PWD
  #atrivedi:080113
  #foreach top ($top1 $at_top2 $at_top3 $at_top4 $vm_top2 $vm_top3 $vm_top4 $top5)
  set bkdir = "bk_"`date +%F`_`date +%H%M`
  foreach top ($top1 $vm_top2 $vm_top3 $vm_top4 $top5)
    set outfile = "$top"__"$nQ2bins"-"$Q2min"-"$Q2max"__"$nWbins"-"$Wmin"-"$Wmax"__"$type".root
    #prepare arguments for procYields
    set str_top = \"$top\" #since procYields takes 'top' as a TString
    set infile = \"yield.root\"
    if ( (! -e $outfile) ) then
      echo "-------------------------------------------------"
      echo "going to make $outfile"
      root -b -q "procYields.C($infile, $str_top, $nQ2bins, $Q2min, $Q2max, $nWbins, $Wmin, $Wmax,$usehel)"
      echo "done making $outfile"
    else if ( ((-e $outfile)&&($overwrite == 1)) ) then
      echo "-------------------------------------------------"
      #set bkdir = "bk_"`date +%F`_`date +%H%M%S`
      echo "going to backup" $outfile "in" $bkdir
      if (! -e $bkdir) then 
        mkdir $bkdir
      endif
      cp -rp $outfile $bkdir/$outfile
      echo "Done backing up"

      echo ""

      echo "going to make $outfile"
      root -b -q "procYields.C($infile, $str_top, $nQ2bins, $Q2min, $Q2max, $nWbins, $Wmin, $Wmax,$usehel)"
      echo "done making $outfile"
    else
      echo "$outfile exists!"
    endif
  end
end
