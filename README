Please read at-h10/formats/README to understand:
================================================
	+ `h10typ` understood by ana.cpp and therefore the, rest of the analysis objects
	+  the nuances of Bind-ing h10 TTrees of different `h10typ` to DataH10

ana2pi Branches 
(Listed in accordance with tree-level heirarchy which is set up by executing 'git branch sub-branch' when the top level branch is checked out)
==================================================================
+ master: pre-DNP code; pretty much should reproduce DNP results
	+ elastic: Here I started the effort to setup Simulation on CentOS6 (the idea as to use elastic simulations, hence the name) and also reorganzed a lot of code which mainly affected the production of processed data from h10-data (See handwritten notes). Also a lot of new scripts etc may have been added. 
		+ setup_sim_CentOS6 [02-05-14]: I realized that setting up Simulation was getting to be a more involved task; It was not as simple as directly comparing sim-elastic-data with exp-elastic-data. A lot of details important to my analysis emerged, to list the important ones, Momentum Correction, Energy Loss, "Effective Corrections/Beam Tuning" for Sim and Exp, and also that I should not just compare Elastic data for Sim. & Exp., but also the Missing Mass distributions in my reaction channel. The increasing complexity of this task, made me want to make more change, to not only add new functionality, but also to improve the code's readability and integerity, hence I made this new branch. Some of the salient changes:
		1. proc_top & data_top -> proc_d2pi & data_2pi (Code readability)
			1.i.  More data added to Data2pi (Code integrity)
			1.ii. ProcD2pi::UpdateMM(), ProcD2pi::UpdateVarsets() -> ProcD2pi::UpdateMM(), ProcD2pi::UpdateVarsets() (Code integrity and readability)
			1.iii. Added functionality to make d2pi Tree (New functionality)
                               1.iv. Added functionality for a single instantiation of ProcD2pi to make `d2pi` for Thrown and Reconstructed events (earlier a single instantiation could make `d2pi` for Thrown or Reconstructed events)  
		2. Moved "top" from DataAna to Data2pi (Code integrity)
		3. ProcD2pi::UpdateMM(), ProcD2pi::UpdateVarsets() -> ProcD2pi::UpdateMM(), ProcD2pi::UpdateVarsets() (Code integrity and readability)
			+ extract_obs [06-12-14]: After 'setup_sim_CentOS6', where I set up the simulation on the new CentOS6 machine, along with developing a lot of infrastructure to understand and study (see handwritten and other notes for details):
				- Detector resolution & offsets and its affect on finally reconstructed quantities
				- Affects of various corrections - mcor,ecor,"effcor" - on finally reconstructed quantities,
			I was ready to move on to finally extracting observables, now with a better understanding of details that I was earlier unclear about.

			In order to move on, I realized that I had to address some issues directly and accomodate any other new issues that would arise now that I am thinking about the data in a different perspective. I will try to keep here a note of the salient changes/new features that I will implement in this new branch:
				1. Address large memory consumption while making topX/h8
				2. New process to make obsX-sim/exp.root
				3. New process to display the observables for final publication and diagnosis

				
